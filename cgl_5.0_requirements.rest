====================
CGL 5.0 Requirements
====================

.. contents::

.. _1155: http://www.ietf.org/rfc/rfc1155.txt
.. _1157: http://www.ietf.org/rfc/rfc1155.txt
.. _1901: http://www.ietf.org/rfc/rfc1901.txt
.. _1908: http://www.ietf.org/rfc/rfc1908.txt
.. _1213: http://www.ietf.org/rfc/rfc1213.txt
.. _1227: http://www.ietf.org/rfc/rfc1227.txt
.. _1886: http://www.ietf.org/rfc/rfc1886.txt
.. _1981: http://www.ietf.org/rfc/rfc1981.txt
.. _2011: http://www.ietf.org/rfc/rfc2011.txt
.. _2012: http://www.ietf.org/rfc/rfc2012.txt
.. _2013: http://www.ietf.org/rfc/rfc2013.txt
.. _2096: http://www.ietf.org/rfc/rfc2096.txt
.. _2367: http://www.ietf.org/rfc/rfc2367.txt
.. _2401: http://www.ietf.org/rfc/rfc2401.txt
.. _2402: http://www.ietf.org/rfc/rfc2402.txt
.. _2403: http://www.ietf.org/rfc/rfc2403.txt
.. _2404: http://www.ietf.org/rfc/rfc2404.txt
.. _2405: http://www.ietf.org/rfc/rfc2405.txt
.. _2406: http://www.ietf.org/rfc/rfc2406.txt
.. _2409: http://www.ietf.org/rfc/rfc2409.txt
.. _2410: http://www.ietf.org/rfc/rfc2410.txt
.. _2428: http://www.ietf.org/rfc/rfc2428.txt
.. _2451: http://www.ietf.org/rfc/rfc2451.txt
.. _2452: http://www.ietf.org/rfc/rfc2452.txt
.. _2454: http://www.ietf.org/rfc/rfc2454.txt
.. _2460: http://www.ietf.org/rfc/rfc2460.txt
.. _2461: http://www.ietf.org/rfc/rfc2461.txt
.. _2462: http://www.ietf.org/rfc/rfc2462.txt
.. _2463: http://www.ietf.org/rfc/rfc2463.txt
.. _2465: http://www.ietf.org/rfc/rfc2465.txt
.. _2012: http://www.ietf.org/rfc/rfc2012.txt
.. _2466: http://www.ietf.org/rfc/rfc2466.txt
.. _2474: http://www.ietf.org/rfc/rfc2474.txt
.. _2475: http://www.ietf.org/rfc/rfc2475.txt
.. _2527: http://www.ietf.org/rfc/rfc2527.txt
.. _2571: http://www.ietf.org/rfc/rfc2571.txt
.. _2575: http://www.ietf.org/rfc/rfc2575.txt
.. _2576: http://www.ietf.org/rfc/rfc2576.txt
.. _2578: http://www.ietf.org/rfc/rfc2578.txt
.. _2579: http://www.ietf.org/rfc/rfc2579.txt
.. _2580: http://www.ietf.org/rfc/rfc2580.txt
.. _2585: http://www.ietf.org/rfc/rfc2585.txt
.. _2665: http://www.ietf.org/rfc/rfc2665.txt
.. _2710: http://www.ietf.org/rfc/rfc2710.txt
.. _2742: http://www.ietf.org/rfc/rfc2742.txt
.. _2788: http://www.ietf.org/rfc/rfc2788.txt
.. _2789: http://www.ietf.org/rfc/rfc2789.txt
.. _2790: http://www.ietf.org/rfc/rfc2790.txt
.. _2819: http://www.ietf.org/rfc/rfc2819.txt
.. _2856: http://www.ietf.org/rfc/rfc2856.txt
.. _2863: http://www.ietf.org/rfc/rfc2863.txt
.. _2864: http://www.ietf.org/rfc/rfc2864.txt
.. _2874: http://www.ietf.org/rfc/rfc2874.txt
.. _2893: http://www.ietf.org/rfc/rfc2893.txt
.. _2960: http://www.ietf.org/rfc/rfc2960.txt
.. _3165: http://www.ietf.org/rfc/rfc3165.txt
.. _3231: http://www.ietf.org/rfc/rfc3231.txt
.. _3270: http://www.ietf.org/rfc/rfc3270.txt
.. _3279: http://www.ietf.org/rfc/rfc3279.txt
.. _3280: http://www.ietf.org/rfc/rfc3280.txt
.. _3291: http://www.ietf.org/rfc/rfc3291.txt
.. _3309: http://www.ietf.org/rfc/rfc3309.txt
.. _3315: http://www.ietf.org/rfc/rfc3315.txt
.. _3411: http://www.ietf.org/rfc/rfc3411.txt
.. _3412: http://www.ietf.org/rfc/rfc3412.txt
.. _3413: http://www.ietf.org/rfc/rfc3413.txt
.. _3414: http://www.ietf.org/rfc/rfc3414.txt
.. _3415: http://www.ietf.org/rfc/rfc3415.txt
.. _3417: http://www.ietf.org/rfc/rfc3417.txt
.. _3418: http://www.ietf.org/rfc/rfc3418.txt
.. _3484: http://www.ietf.org/rfc/rfc3484.txt
.. _3493: http://www.ietf.org/rfc/rfc3493.txt
.. _3542: http://www.ietf.org/rfc/rfc3542.txt
.. _3587: http://www.ietf.org/rfc/rfc3587.txt
.. _3588: http://www.ietf.org/rfc/rfc3588.txt
.. _3596: http://www.ietf.org/rfc/rfc3596.txt
.. _3633: http://www.ietf.org/rfc/rfc3633.txt
.. _3646: http://www.ietf.org/rfc/rfc3646.txt
.. _3720: http://www.ietf.org/rfc/rfc3720.txt
.. _3721: http://www.ietf.org/rfc/rfc3721.txt
.. _3723: http://www.ietf.org/rfc/rfc3723.txt
.. _3758: http://www.ietf.org/rfc/rfc3758.txt
.. _3775: http://www.ietf.org/rfc/rfc3775.txt
.. _3776: http://www.ietf.org/rfc/rfc3776.txt
.. _3810: http://www.ietf.org/rfc/rfc3810.txt
.. _3873: http://www.ietf.org/rfc/rfc3873.txt
.. _4191: http://www.ietf.org/rfc/rfc4191.txt
.. _4213: http://www.ietf.org/rfc/rfc4213.txt
.. _4301: http://www.ietf.org/rfc/rfc4301.txt
.. _4302: http://www.ietf.org/rfc/rfc4302.txt
.. _4303: http://www.ietf.org/rfc/rfc4303.txt
.. _4305: http://www.ietf.org/rfc/rfc4305.txt
.. _4307: http://www.ietf.org/rfc/rfc4307.txt
.. _4322: http://www.ietf.org/rfc/rfc4322.txt
.. _4434: http://www.ietf.org/rfc/rfc4434.txt
.. _4460: http://www.ietf.org/rfc/rfc4460.txt


Availability Requirements
=========================

.. |avl| replace:: Availability

AVL.2.0 Single-bit ECC handling
-------------------------------
+---------------+------------------------------------+--------------+----------+
| ID            |       Name                         |   Category   | Priority |
+===============+====================================+==============+==========+
| AVL.2.0       | Single-bit ECC handling            |    |avl|     |    P2    |
+---------------+------------------------------------+--------------+----------+
| CGL specifies that carrier grade Linux shall provide a mechanism for         |
| reporting when hardware error checking and correcting (ECC) detects and/or   |
| recovers from a single-bit ECC error.                                        |
+---------------+------------------------------------+--------------+----------+

AVL.2.1 Multi-bit ECC handling
------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.2.1       | Multi-bit ECC handling              |    |avl|    |    P2    |
+---------------+-------------------------------------+-------------+----------+
| CGL specifies that carrier grade Linux shall provide a panic trigger         |
| mechanism when hardware error checking and correcting (ECC) detects          |
| multi-bit ECC errors.                                                        |
+---------------+-------------------------------------+-------------+----------+

AVL.4.1 VM Strict Over-Commit
-----------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.4.1       | VM Strict Over-Commit               |    |avl|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the ability to         |
|  control kernel virtual memory allocation adjustments based on the           |
|  specific needs of the system. Control of virtual memory shall include but   |
|  not be limited to the following:                                            |
|                                                                              |
|  - Heuristic overcommit handling. Obvious overcommits of address space are   |
|    refused. Used for a typical system. It ensures a seriously wild           |
|    allocation fails while allowing overcommit to reduce swap usage.  root    |
|    is allowed to allocate slighly more memory in this mode. This is the      |
|    default.                                                                  |
|                                                                              |
|  - Always overcommit. Appropriate for some scientific applications.          |
|                                                                              |
|  - Don't overcommit. The total address space commit for the system is not    |
|    permitted to exceed swap + a configurable percentage (default is 50) of   |
|    physical RAM.  Depending on the percentage you use, in most situations    |
|    this means a process will not be killed while accessing pages but will    |
|    receive errors on memory allocation as appropriate.                       |
+---------------+-------------------------------------+-------------+----------+

AVL.5.3 Process-Level Non-Intrusive Application Monitor
-------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.5.3       | Process-Level Non-Intrusive         |    |avl|    |    P1    |
|               | Application Monitor                 |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide control and            |
|  management capabilities for processes that cannot be altered to             |
|  incorporate a monitoring API. Such capabilities are known as                |
|  non-intrusive monitoring. These capabilities must be implemented            |
|  programmatically using commands or scripts.                                 |
|                                                                              |
|  Another issue for many such processes is that the start script itself may   |
|  spawn an application process that is not under the control of the           |
|  management process.  This sub-requirement assumes that this does not        |
|  happen, and the child process remains under the control of the management   |
|  entity.                                                                     |
|                                                                              |
|  Capabilities required:                                                      |
|                                                                              |
|  - The following capabilities must be enabled for controlling processes:     |
|                                                                              |
|    + The ability to start a process (or a list of processes)                 |
|    + The ability to stop a process (or a list of processes)                  |
|                                                                              |
|  - The following capabilities must be enabled for monitoring processes:      |
|                                                                              |
|    + The ability to detect the unexpected exit of a process                  |
|    + The ability to configure a set of actions in response to an             |
|      unexpected exit of a process                                            |
|                                                                              |
|  - The following services must be provided beyond those currently provided by|
|    inittab:                                                                  |
|                                                                              |
|    + The ability to configure whether to restart the application if the      |
|      process dies                                                            |
|    + A configurable amount of time to wait before restarting the application |
|    + A limit on the number of times to restart the application               |
+---------------+-------------------------------------+-------------+----------+

AVL.6.0 Disk Predictive Analysis
--------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.6.0       |   Disk Predictive Analysis          |    |avl|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide capabilities to        |
|  assist in monitoring storage systems. The aim of this support is to         |
|  assist in predicting situations likely to lead to failure of disks. This    |
|  allows preventive action to be taken to avoid the failure and resulting     |
|  disruption of service.                                                      |
+---------------+-------------------------------------+-------------+----------+

AVL.7.1.1 Multi-Path Access to Storage: Multi-Path Detection
------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.7.1.1     | Multi-Path Access to Storage:       |    |avl|    |    P1    |
|               | Multi-Path Detection                |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a mechanism to enable  |
|  multiple access paths from a node to storage devices. The software shall    |
|  determine if multiple paths exist to the same port of the I/O device.       |
+---------------+-------------------------------------+-------------+----------+

AVL.7.1.2 Multi-Path Access to Storage: I/O Balancing
-----------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.7.1.2     | Multi-Path Access to Storage:       |    |avl|    |    P1    |
|               | I/O Balancing                       |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a mechanism to enable  |
|  multiple access paths from a node to storage devices. The software shall    |
|  determine if multiple paths exist to the same port of the I/O device, and,  |
|  with configurable controls, balance I/O requests across multiple host bus   |
|  adapters.  If multiple paths exist to the same device over two separate     |
|  device ports on the same host bus adapter, those I/Os will not be balanced. |
+---------------+-------------------------------------+-------------+----------+

AVL.7.1.3 Multi-Path Access to Storage: Automatic Path Failover
---------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.7.1.3     | Multi-Path Access to Storage:       |    |avl|    |    P1    |
|               | Automatic Path Failover             |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a mechanism to         |
|  enable multiple access paths from a node to storage devices.  Handling a    |
|  path failure must be automatic.                                             |
+---------------+-------------------------------------+-------------+----------+

AVL.7.1.4 Multi-Path Access to Storage: Failed Path Reactivation
----------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.7.1.4     | Multi-Path Access to Storage:       |    |avl|    |    P1    |
|               | Failed Path Reactivation            |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a mechanism to         |
|  enable multiple access paths from a node to storage devices.  A             |
|  mechanism must be provided for the reactivation of failed paths,            |
|  allowing them to be placed back in service.                                 |
+---------------+-------------------------------------+-------------+----------+

AVL.7.1.5 Multi-Path Access to Storage: Automatic Path Configuration
--------------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.7.1.5     | Multi-Path Access to Storage:       |    |avl|    |    P1    |
|               | Automatic Path Configuration        |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a mechanism to         |
|  enable multiple access paths from a node to storage devices.  It must be    |
|  possible to automatically determine and configure multiple paths.           |
+---------------+-------------------------------------+-------------+----------+

AVL.7.1.6 Multi-Path Access to Storage: Automatic Volume Configuration
----------------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.7.1.6     | Multi-Path Access to Storage:       |    |avl|    |    P1    |
|               | Automatic Volume Configuration      |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a mechanism to         |
|  enable multiple access paths from a node to storage devices.  Automatic     |
|  configuration shall allow automatic multi-path configuration of complete    |
|  disks and partitions located on those disks.                                |
+---------------+-------------------------------------+-------------+----------+

AVL.7.1.7 Multi-Path Access to Storage: Root File System Hosting
----------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.7.1.7     | Multi-Path Access to Storage:       |    |avl|    |    P1    |
|               | Root File System Hosting            |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a mechanism to         |
|  enable multiple access paths from a node to storage devices.  A             |
|  multipath device feature that allows multipath detection and mapping        |
|  early in the boot process must be provided so that the root file system     |
|  can exist on a multipath device.                                            |
+---------------+-------------------------------------+-------------+----------+

AVL.7.1.8 Multi-Path Access to Storage: Link Failure Reporting
--------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.7.1.8     | Multi-Path Access to Storage:       |    |avl|    |    P1    |
|               | Link Failure Reporting              |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a mechanism to         |
|  enable multiple access paths from a node to storage devices. The            |
|  mechanism should implement error logging functions that clearly identify    |
|  the failing device path.                                                    |
+---------------+-------------------------------------+-------------+----------+

AVL.8.1 Fast Linux Restart Bypassing System Firmware
----------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.8.1       | Fast Linux Restart Bypassing        |    |avl|    |    P1    |
|               | System Firmware                     |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a mechanism to         |
|  speed up operating system initialization by bypassing the system            |
|  firmware when one instance of Linux reboots to another instance of          |
|  Linux.                                                                      |
+---------------+-------------------------------------+-------------+----------+

AVL.9.0 Boot Image Fallback Mechanism
-------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.9.0       | Boot Image Fallback Mechanism       |    |avl|    |    P2    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a mechanism that       |
|  enables a system to fallback to a previous "known good" boot image in       |
|  the event of a catastrophic boot failure (i.e. failure to boot, panic on    |
|  boot, failure to initialize HW/SW). System images are captured from the     |
|  "known good" system and the system reboots to the latest good image.        |
|  This mechanism would allow an automatic fallback mechanism to protect       |
|  against problems resulting from system changes, such as program updates,    |
|  installations, kernel changes, and configuration changes."                  |
+---------------+-------------------------------------+-------------+----------+

AVL.10.0 Application Live Patching
----------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.10.0      | Application Live Patching           |    |avl|    |    P2    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a mechanism and        |
|  framework by which a custom application can be built so that it can be      |
|  upgraded by replacing symbols in its live process. Dynamic replacement      |
|  of symbols allows a process to access upgraded functions or values          |
|  without requiring a process restart and in many circumstances can lead      |
|  to improved process availability and uptime. The mechanism should be        |
|  applied only to user applications. Patch to underlying distribution         |
|  software component may lose distribution support.                           |
+---------------+-------------------------------------+-------------+----------+

AVL.12.0 NFS Client Protection Across Server Failures
-----------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.12.0      | NFS Client Protection Across Server |    |avl|    |    P2    |
|               | Failures                            |             |          |
+---------------+-------------------------------------+-------------+----------+
| CGL specifies that carrier grade Linux shall provide mechanisms that allow   |
| an NFS server to have failover capability to provide service continuity      |
| upon a node failure. The NFS service has to be resumed on another node       |
| without any impact on NFS clients other than the retransmission of pending   |
| requests (open files must remain open). Clients authenticated on the old     |
| server must remain authenticated on the new server.                          |
+---------------+-------------------------------------+-------------+----------+

AVL.13.1 Parallel User Initialization During Startup
----------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.13.1      | Parallel User Initialization        |    |avl|    |    P2    |
|               | During Startup                      |             |          |
+---------------+-------------------------------------+-------------+----------+
| CGL specifies that the user initialization procedure executed by the         |
| program /sbin/init shall provide a mechanism to allow multiple init          |
| scripts to run in parallel. CGL further specifies that a service is only     |
| started once its dependent services have started.                            |
+---------------+-------------------------------------+-------------+----------+

AVL.15.0 Fast Application Restart Mechanism
-------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.15.0      | Fast Application Restart Mechanism  |    |avl|    |    P2    |
+---------------+-------------------------------------+-------------+----------+
| CGL specifies that carrier grade Linux shall provide a mechanism that        |
| enables a quick application restart. Typical applications in a carrier       |
| environment use multiple processes with inter-process communications. As     |
| applications become more complex, application initialization times become    |
| longer.                                                                      |
|                                                                              |
| To speed up application initialization, the mechanism shall provide the      |
| functionality to simultaneously save memory images of multiple processes     |
| (including the kernel resources used by each process) and to restore the     |
| images.                                                                      |
|                                                                              |
| When the application completes initialization, including making              |
| connections between processes and setting up kernel resources for            |
| inter-process communication, the application invokes a save function that    |
| makes a copy of the memory images of the process and kernel resources. If    |
| the application hangs, the mechanism restores the memory images and kernel   |
| resources and restarts the application.                                      |
+---------------+-------------------------------------+-------------+----------+

AVL.17.0 Multiple FIB Support
-----------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.17.0      | Multiple FIB Support                |    |avl|    |    P2    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that Linux shall support multiple Forwarding Information      |
|  Base (FIB) quick look-up tables with forwarding addresses to allow          |
|  better server virtualization of overlapping addresses. An FIB is a table    |
|  that contains a copy of the forwarding information in the IP routing        |
|  table. All hooks/changes required to support multiple FIBs shall be         |
|  added.                                                                      |
+---------------+-------------------------------------+-------------+----------+

AVL.21.0 Ethernet link bonding using IPV4 
------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.21.0      | Ethernet link bonding using         |    |avl|    |    P1    |
|               | IPV4                                |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall support bonding of multiple    |
|  Ethernet NICs within a single node using IPV4. The bonding supports the     |
|  following functions:                                                        |
|                                                                              |
|  - Ethernet link aggregation: Supports multiple Ethernet cards to be         |
|    bonded for bandwidth aggregation.                                         |
|                                                                              |
|  - Ethernet link failover: Supports automatic failover of an IP address      |
|    from one Ethernet NIC to another within a single node using the           |
|    Ethernet bonding.  Some mode of bonding requires IEEE 802.3ad support     |
|    on switches; however, other modes do not require special protocol         |
|    support.                                                                  |
+---------------+-------------------------------------+-------------+----------+

AVL.21.1 Ethernet link bonding using IPV6
-----------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.21.1      | Ethernet link bonding using         |    |avl|    |    P1    |
|               | IPV6                                |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall support bonding of multiple    |
|  Ethernet NICs within a single node using IPV6. The bonding supports the     |
|  following functions:                                                        |
|                                                                              |
|  - Ethernet link aggregation: Supports multiple Ethernet cards to be         |
|    bonded for bandwidth aggregation.                                         |
|                                                                              |
|  - Ethernet link failover: Supports automatic failover of an IP address      |
|    from one Ethernet NIC to another within a single node using the           |
|    Ethernet bonding.  Some modes of bonding require IEEE 802.3ad support     |
|    on switches; however, other modes do not require special protocol         |
|    support.                                                                  |
+---------------+-------------------------------------+-------------+----------+

AVL.22.0 Software RAID 1 support
--------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.22.0      | Software RAID 1 support             |    |avl|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide RAID 1(Mirroring)      |
|  support so that the OS maintains duplicate sets of all data on separate     |
|  disk drives.  RAID 1 support shall allow booting off of selected mirror     |
|  disk drive even if the other drive is failed. RAID 1 implementation         |
|  shall provide a user-controllable parameter to throttle the syncing         |
|  operation. Support can be configured out if desired.                        |
+---------------+-------------------------------------+-------------+----------+

AVL.23.0 Watchdog Timer Pre-Timeout Interrupt
---------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.23.0      | Watchdog Timer Pre-Timeout          |    |avl|    |    P1    |
|               | Interrupt                           |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for a          |
|  watchdog timer pre-timeout interrupt. Where the hardware supports such a    |
|  capability an interrupt handler routine will be called before the real      |
|  timeout occurs.                                                             |
+---------------+-------------------------------------+-------------+----------+

AVL.24.0 Watchdog Timer Interface Requirements
----------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.24.0      | Watchdog Timer Interface            |    |avl|    |    P1    |
|               | Requirements                        |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the ability to use     |
|  an interface to reset the hardware watchdog timer, where the hardware       |
|  supports such a capability. This timeout value shall be a configurable      |
|  item. A configurable action can be performed when a timeout occurs.         |
+---------------+-------------------------------------+-------------+----------+

AVL.25.0 Application Heartbeat Monitor
--------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.25.0      | Application Heartbeat Monitor       |    |avl|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide an application         |
|  heartbeat service that allows applications to register to be monitored      |
|  via specified APIs.  The mechanism shall use periodic synchronized          |
|  events (heartbeats) between an application and the monitor. If a            |
|  registered application fails to provide a heartbeat, the monitor shall      |
|  report the events. The application heartbeat service shall be available     |
|  to any process or sub-process (thread) entity on the system. A process      |
|  or thread may register for multiple heartbeats.                             |
+---------------+-------------------------------------+-------------+----------+

AVL.26.0 Resilient File System Support
--------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.26.0      | Resilient File System Support       |    |avl|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for the        |
|  installation of a file system that is resilient against system failures     |
|  in terms of recovering rapidly upon reboot without requiring a full,        |
|  traditional fsck.  This is normally achieved using logging or journaling    |
|  techniques.                                                                 |
+---------------+-------------------------------------+-------------+----------+

AVL.27.0 Kernel Live Patching
-----------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| AVL.27.0      | Kernel Live Patching                |    |avl|    |    P2    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a mechanism for        |
|  symbols, functions, or variables within a running kernel to be replaced     |
|  with new symbols, functions, or variables. CGL further specifies this       |
|  operation be completed without a system shutdown or restart                 |
+---------------+-------------------------------------+-------------+----------+

AVL.28.1 File System De-fragmentation
-------------------------------------
+------------+----------------------------------+-----------------+------------+
|     ID     |               Name               |    Category     |  Priority  |
+============+==================================+=================+============+
| AVL.28.1   | File System De-fragmentation     |    |avl|        |    P1      |
+------------+----------------------------------+-----------------+------------+
| CGL specifies that carrier grade Linux shall provide support for a file      |
| system that allows for de-fragmentation of on-disk data. It is expected      |
| that the file system will not be mounted or otherwise in use at the time.    |
|                                                                              |
| Reference: SCOPE Alliance Carrier Grade Gap CGOS-1.6                         |
|                                                                              |
+------------+----------------------------------+-----------------+------------+

AVL.28.2 Multi-Architecture File System Support
-----------------------------------------------
+------------+-----------------------------------+----------------+------------+
|     ID     |               Name                |    Category    |  Priority  |
+============+===================================+================+============+
| AVL.28.2   | Multi-Architecture File System    |    |avl|       | P1         |
|            | Support                           |                |            |
+------------+-----------------------------------+----------------+------------+
| Linux Foundation CGL specifies that carrier grade Linux shall                |
| provide support for a file system where the metadata and data are stored     |
| independent of host CPU word length and endianness.                          |
|                                                                              |
| Reference: SCOPE Alliance Carrier Grade Gap CGOS-1.9                         |
|                                                                              |
| PoC: ext2, ext3, etc.                                                        |
+------------+-----------------------------------+----------------+------------+

AVL.28.3 File System Metadata Integrity Checksum
------------------------------------------------
+------------+-----------------------------------+----------------+------------+
|     ID     |               Name                |    Category    |  Priority  |
+============+===================================+================+============+
| AVL.28.3   | File System Metadata Integrity    |    |avl|       | P1         |
|            | Checksum                          |                |            |
+------------+-----------------------------------+----------------+------------+
| Linux Foundation CGL specifies that carrier grade Linux shall                |
| provide support for a file system that guarantees file system metadata and   |
| data consistency and fast recovery in the event of interrupted updates with  |
| checksums on all metadata.                                                   |
|                                                                              |
| Reference: SCOPE Alliance Carrier Grade Gap CGOS-1.2                         |
|                                                                              |
| PoC: ext4, BTRFS                                                             |
+------------+-----------------------------------+----------------+------------+

AVL.28.4 File System Block Checksumming
---------------------------------------
+------------+-----------------------------------+----------------+------------+
|     ID     |               Name                |    Category    |  Priority  |
+============+===================================+================+============+
| AVL.28.4   | File System Block Checksumming    |    |avl|       | P2         |
+------------+-----------------------------------+----------------+------------+
| Linux Foundation CGL specifies that carrier grade Linux shall                |
| provide support for a file system that provides end-to-end checksums of all  |
| blocks currently in use on the file system.                                  |
|                                                                              |
| Reference: SCOPE Alliance Carrier Grade Gap CGOS-1.1                         |
|                                                                              |
| PoC: BTRFS, ZFS on FUSE                                                      |
+------------+-----------------------------------+----------------+------------+

AVL.28.5 File System Multiple Access Protection
-----------------------------------------------
+------------+---------------------------------+-----------------+-------------+
|     ID     |              Name               |    Category     |  Priority   |
+============+=================================+=================+=============+
| AVL.28.5   | File System Multiple Access     |    |avl|        | P2          |
|            | Protection                      |                 |             |
+------------+---------------------------------+-----------------+-------------+
| Linux Foundation CGL specifies that carrier grade Linux shall                |
| provide support for shared, simultaneous read and write access to file       |
| system data that is assured protection against accidental corruption of the  |
| data and/or metadata.                                                        |
+------------+---------------------------------+-----------------+-------------+

AVL.28.6 File System Snapshots
------------------------------
+--------------+----------------------------+-------------------+--------------+
|      ID      |            Name            |     Category      |   Priority   |
+==============+============================+===================+==============+
| AVL.28.6     | File System Snapshots      |    |avl|          | P2           |
+--------------+----------------------------+-------------------+--------------+
| Linux Foundation CGL specifies that carrier grade Linux shall                |
| provide support for a file system that allows the creation of atomic         |
| snapshots of volumes while mounted.  These snapshots must be valid           |
| filesystem images that can be mounted as if they were the original volume at |
| the time of the snapshot.                                                    |
|                                                                              |
| Reference: SCOPE Alliance Carrier Grade Gap CGOS-1.7                         |
+--------------+----------------------------+-------------------+--------------+

AVL.28.7 File System Clones
---------------------------
+---------------+--------------------------+-------------------+---------------+
|      ID       |           Name           |     Category      |   Priority    |
+===============+==========================+===================+===============+
| AVL.28.7      | File System Clones       |    |avl|          | P2            |
+---------------+--------------------------+-------------------+---------------+
| Linux Foundation CGL specifies that carrier grade Linux shall                |
| provide support for a file system that allows atomic backups while the       |
| volume is mounted and in use.  These backups should be writable where        |
| subsequent updates to the file system will not be reflected in the original  |
| and therefore each can be considered a fork of a single, live file system    |
| image.                                                                       |
|                                                                              |
| Reference: SCOPE Alliance Carrier Grade Gap CGOS-1.7                         |
+---------------+--------------------------+-------------------+---------------+

Cluster Requirements
====================

.. |clu| replace:: Cluster

CFH.1.0 Cluster Node Failure Detection
--------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| CFH.1.0       | Cluster Node Failure Detection      |    |clu|    |    P2    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a fast,                |
|  communicationbased cluster node failure mechanism that is reflected in a    |
|  cluster membership service. At a minimum, the cluster node failure          |
|  mechanism maintains a list of the nodes that are currently active in the    |
|  cluster. Changes in cluster membership must result in a membership event    |
|  that can be monitored by cluster services, applications, and middleware     |
|  that register to be notified of membership events. Fast node failure        |
|  detection must not depend on a failing node reporting that the node is      |
|  failing. However, self-diagnosis may be leveraged to speed up failure       |
|  detection in the cluster. This requirement does not address the issue of    |
|  how to prevent failing nodes from accessing shared resources (see           |
|  CFH.3.0 Application Fail-Over Enabling).                                    |
|                                                                              |
|  Fast node failure detection shall include the following capabilities:       |
|                                                                              |
|  - Ability to provide cluster membership health monitoring through           |
|    cluster communication mechanisms.                                         |
|                                                                              |
|  - Support for multiple, redundant communication paths to check the          |
|    health of cluster nodes.                                                  |
|                                                                              |
|  - Support for fast failure detection. The guideline is a maximum of         |
|    250ms for failure detection. Since there is tradeoff between fast         |
|    failure detection and potentially false failures, the                     |
|    health-monitoring interval must be tunable.                               |
|                                                                              |
|  - Ability to provide a cluster-membership change event to middleware and    |
|    applications.                                                             |
|                                                                              |
|  Cluster node failure detection must use only a small percentage of the      |
|  total cluster communication bandwidth for membership health monitoring.     |
|  The guideline is that the bandwidth used by the health monitoring           |
|  mechanism shall be linear with respect to the number of bytes per second    |
|  per node.                                                                   |
+---------------+-------------------------------------+-------------+----------+

CFH.2.0 Prevent Failed Node From Corrupting Shared Resources
------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| CFH.2.0       | Prevent Failed Node From            |    |clu|    |    P1    |
|               | Corrupting Shared Resources         |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a way to fence a       |
|  failed or errant node from shared resources, such as SAN storage, to        |
|  prevent the failed node from causing damage to shared resources. Since      |
|  the surviving nodes in the cluster will want to failover resources,         |
|  applications, and/or middleware to other surviving nodes in the cluster,    |
|  the cluster must make sure it is safe to do the failover. Killing the       |
|  failed node is the easiest and safest way to protect shared resources       |
|  from a failing node. If a failing node can detect that it is failing,       |
|  the failing node could kill itself (suicide) or disable its ability to      |
|  access shared resources to augment the node isolation process.  However,    |
|  the cluster cannot depend on the failing node to alter the cluster when     |
|  it is failing, so the cluster must be proactive in protecting shared        |
|  resources.                                                                  |
|                                                                              |
|  External Specification Dependencies: This requirement is dependent on       |
|  hardware to provide a mechanism to reset or isolate a failed or failing     |
|  node.                                                                       |
+---------------+-------------------------------------+-------------+----------+

CFH.3.0 Application Fail-Over Enabling
--------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| CFH.3.0       | Application Fail-Over Enabling      |    |clu|    |    P2    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide mechanisms for         |
|  failing over applications in a cluster from one node to another.            |
|  Applications and nodes are monitored and a failover mechanism is invoked    |
|  when a failure is detected. Once a failure is detected, the application     |
|  failover mechanism must determine which policies apply to this failover     |
|  scenario and then begin the process to start a standby application or       |
|  initiate the re-spawn of an application within 1 second.                    |
|                                                                              |
|  *Note*: The full application failover time is dependent upon application    |
|  and node failure detection, the time to apply the failover policies, and    |
|  the time it takes to start or restart the application. The aggregate        |
|  failover time for an application must allow the cluster to maintain         |
|  carrier grade application availability.                                     |
+---------------+-------------------------------------+-------------+----------+

CSM.1.0 Storage Network Replication
-----------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| CSM.1.0       | Storage Network Replication         |    |clu|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a mechanism for        |
|  storage network replication. The storage network replication shall          |
|  provide the following:                                                      |
|                                                                              |
|  - A network replication layer that enables RAID-1-like disk mirroring,      |
|    using a cluster-local network for data.                                   |
|                                                                              |
|  - Resynchronization of replicated data after node failure and recovery      |
|    such that replicated data remains available during resynchronization.     |
+---------------+-------------------------------------+-------------+----------+

CSM.2.0 Cluster-aware Volume Management for Shared Storage
----------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| CSM.2.0       | Cluster-aware Volume                |    |clu|    |    P2    |
|               | Management for Shared Storage       |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide management of          |
|  logical volumes on shared storage from different cluster nodes. Volumes     |
|  in such an environment are usually on physical disks accessible to          |
|  multiple nodes. Volume management shall include the following:              |
|                                                                              |
|  - Enabling remote nodes to be informed of volume definition changes.        |
|                                                                              |
|  - Providing consistent and persistent cluster-wide volume names.            |
|                                                                              |
|  - Managing volumes from different cluster nodes consistently.               |
|                                                                              |
|  - Providing support for the striping and concatenation of storage.          |
|    Clustered mirroring of shared storage is not included in this             |
|    requirement (see CSM.3.0 Shared Storage Mirroring).                       |
+---------------+-------------------------------------+-------------+----------+

CSM.4.0 Redundant Cluster Storage Path
--------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| CSM.4.0       | Redundant Cluster Storage Path      |    |clu|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that Linux shall provide each cluster node with the           |
|  ability to have redundant access paths to shared storage. CGL               |
|  Availability Requirement: AVL.7.1.x Multi-Path Access To Storage            |
+---------------+-------------------------------------+-------------+----------+

CSM.6.0 Cluster File System
---------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| CSM.6.0       | Cluster File System                 |    |clu|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a cluster-wide file    |
|  system.  A clustered file system must allow simultaneous access to          |
|  shared files by multiple computers. Node failure must be transparent to     |
|  file system users on all surviving nodes. A clustered file system must      |
|  provide the same user API and semantics as a file system associated with    |
|  private, single-node storage.                                               |
+---------------+-------------------------------------+-------------+----------+

CSM.7.0 Shared Storage Consistent Access
----------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| CSM.7.0       | Shared Storage Consistent           |    |clu|    |    P1    |
|               | Access                              |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a consistent method    |
|  to access shared storage from different nodes to ensure partition           |
|  information isn't changed on one node while a partition is in use on        |
|  another node that would prevent the change.                                 |
+---------------+-------------------------------------+-------------+----------+

CCM.2.2 Cluster Communication Service: Fault Handling
-----------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| CCM.2.2       | Cluster Communication Service:      |    |clu|    |    P1    |
|               | Fault Handling                      |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a reliable             |
|  communication service that detects a connection failure, aborts the         |
|  connection, and reports the connection failure. An established              |
|  connection must react to and report a problem to the application within     |
|  100 ms upon any kind of service failure, such as a process or node          |
|  crash. The connection failure detection requirement must offer              |
|  controls that allow it to be tailored to specific conditions in             |
|  different clusters. An example is to allow the specification of the         |
|  duration of timeouts or the number of lost packets before declaring         |
|  a connection failed.                                                        |
+---------------+-------------------------------------+-------------+----------+

CAF.2.1 Ethernet MAC Address Takeover
-------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| CAF.2.1       | Ethernet MAC Address Takeover       |    |clu|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies a mechanism to program and announce MAC addresses on          |
|  Ethernet interfaces so that when a SW Failure event occurs, redundant       |
|  nodes may begin receiving traffic for failed nodes.                         |
+---------------+-------------------------------------+-------------+----------+

CAF.2.2 IP Takeover
-------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| CAF.2.2       | IP Takeover                         |    |clu|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies a mechanism to program and announce IP addresses (using       |
|  gratuitous ARP) so that when a SW Failure event occurs, redundant nodes     |
|  may begin receiving traffic for failed nodes.                               |
+---------------+-------------------------------------+-------------+----------+

CDIAG.2.1 Cluster-Wide Identified Application Core Dump
-------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| CDIAG.2.1     | Cluster-Wide Identified             |    |clu|    |    P1    |
|               | Application Core Dump               |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a cluster-aware        |
|  application core dump that uniquely identifies which node produced the      |
|  core dump. For instance, if a diskless node dumps core files to network     |
|  storage, the core dump will be uniquely identified as originating from      |
|  that node.                                                                  |
+---------------+-------------------------------------+-------------+----------+

CDIAG.2.2 Cluster-Wide Kernel Crash Dump
----------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| CDIAG.2.2     | Cluster-Wide Kernel Crash Dump      |    |clu|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a cluster-aware        |
|  kernel crash dump that uniquely identifies which node produced the crash    |
|  dump. For instance, if a diskless node dumps crash data to network          |
|  storage, the data will be uniquely identified as originating from that      |
|  node.                                                                       |
+---------------+-------------------------------------+-------------+----------+

CDIAG.2.3 Cluster Wide Log Collection
-------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| CDIAG.2.3     | Cluster Wide Log Collection         |    |clu|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a cluster-wide         |
|  logging mechanism. A cluster-wide log shall contain node identification,    |
|  message type, and cluster time identification. This cluster-wide log may    |
|  be implemented as a central log or as the collection of specific node       |
|  logs.                                                                       |
+---------------+-------------------------------------+-------------+----------+

CDIAG.2.4 Synchronized/Atomic Time Across Cluster
-------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| CDIAG.2.4     | Synchronized/Atomic Time            |    |clu|    |    P1    |
|               | Across Cluster                      |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide cluster wide time      |
|  synchronization within 500mS, and must synchronize within 10 seconds        |
|  once the time synchronization service is initiated. In a cluster, each      |
|  node must have be synchronized to the same wall-clock time to provide       |
|  consistency in access times to shared resources (i.e. clustered file        |
|  system modification and access times) as well as time stamps in             |
|  cluster-wide logs.                                                          |
+---------------+-------------------------------------+-------------+----------+


Serviceability Requirements
===========================
.. |ser| replace:: Serviceability 

SMM.3.1 Serial Console Operation
--------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SMM.3.1       | Serial Console Operation            |    |ser|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for a          |
|  connection to a system console via a serial port on the system where a      |
|  serial port exists. All output that would appear on a local console must    |
|  appear on the remote console.                                               |
+---------------+-------------------------------------+-------------+----------+

SMM.3.2 Network Console Operation
---------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SMM.3.2       | Network Console Operation           |    |ser|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that Linux shall provide support for a management console     |
|  connection via a network port in addition to providing the standard         |
|  support for a management console connection via a serial port.              |
+---------------+-------------------------------------+-------------+----------+
 

SMM.4.0 Persistent Device Naming
--------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SMM.4.0       | Persistent Device Naming            |    |ser|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide consistent device      |
|  naming functionality. The user-space system name of the device shall be     |
|  maintained when the device is removed and reinstalled even if the device    |
|  is plugged into a different bus, slot, or adapter. A device name shall      |
|  be assigned, based on hardware identification information using policies    |
|  set by the administrator.                                                   |
+---------------+-------------------------------------+-------------+----------+

SMM.5.0 Kernel Profiling
------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SMM.5.0       | Kernel Profiling                    |    |ser|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that Linux shall support profiling of a running kernel and    |
|  applications to identify bottlenecks and other kernel and application       |
|  statistics.                                                                 |
+---------------+-------------------------------------+-------------+----------+

SMM.5.1 Application Profiler (was AVL.19.0)
-------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SMM.5.1       | Application Profiler (was AVL.19.0) |    |ser|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a mechanism to         |
|  profile critical resources of the kernel and applications. The critical     |
|  resources that are profiled by this mechanism shall include (but are not    |
|  limited to):                                                                |
|                                                                              |
|  - Time used                                                                 |
|                                                                              |
|  - Memory used                                                               |
|                                                                              |
|  - Number of semaphores, mutexes, sockets, and threads/child processes in    |
|    use                                                                       |
|                                                                              |
|  - Number of open files.  Monitoring shall happen at configurable,           |
|    periodic intervals or as initiated by the user.                           |
+---------------+-------------------------------------+-------------+----------+

SMM.7.1 Temperature Monitoring
------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SMM.7.1       | Temperature Monitoring              |    |ser|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a capability that      |
|  supports the monitoring of system temperature settings and conditions.      |
+---------------+-------------------------------------+-------------+----------+

SMM.7.2 Fan Monitoring
----------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SMM.7.2       | Fan Monitoring                      |    |ser|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a capability that      |
|  supports the monitoring of system fan settings and conditions.              |
+---------------+-------------------------------------+-------------+----------+

SMM.7.3 Power Monitoring
------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SMM.7.3       | Power Monitoring                    |    |ser|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a capability that      |
|  supports the monitoring of system power settings and conditions.            |
+---------------+-------------------------------------+-------------+----------+

SMM.7.4 Media Monitoring
------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SMM.7.4       | Media Monitoring                    |    |ser|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a capability that      |
|  supports the monitoring of media settings and conditions for system         |
|  media, such as hard disks or hardware specific disk sub-systems.            |
+---------------+-------------------------------------+-------------+----------+

SMM.7.5 Network Monitoring
--------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SMM.7.5       | Network Monitoring                  |    |ser|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a capability that      |
|  supports the monitoring of system network settings and conditions.          |
+---------------+-------------------------------------+-------------+----------+

SMM.7.6 CPU Monitoring
----------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SMM.7.6       | CPU Monitoring                      |    |ser|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a capability that      |
|  supports the monitoring of CPU settings and conditions, such as current     |
|  utilization totals, per process totals and trends, and current speed        |
|  settings.                                                                   |
+---------------+-------------------------------------+-------------+----------+

SMM.7.7 Memory Monitoring
-------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SMM.7.7       | Memory Monitoring                   |    |ser|    |    P2    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a capability that      |
|  supports the monitoring of memory conditions, such as current               |
|  utilization totals, and per process totals and trends.                      |
+---------------+-------------------------------------+-------------+----------+

SMM.8.1 Kernel Message Structuring
----------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SMM.8.1       | Kernel Message Structuring          |    |ser|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support that allows    |
|  the structuring of kernel messages using an event log format to provide     |
|  more information to identify the problem and its severity, and to allow     |
|  client applications registered for the fault event to take policy-based     |
|  corrective action.                                                          |
+---------------+-------------------------------------+-------------+----------+

SMM.8.2 Platform Signal Handler
-------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SMM.8.2       | Platform Signal Handler             |    |ser|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide an infrastructure      |
|  to allow "hardware errors" to be logged using the event logging mechanism.  |
|  A default handler shall be provided.                                        |
+---------------+-------------------------------------+-------------+----------+

SMM.8.3 Remote Access to Event Log
----------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SMM.8.3       | Remote Access to Event Log          |    |ser|    |    P2    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for a          |
|  remote access capability that allows a centralized system to access the     |
|  Linux OS event log information of a remote system.                          |
+---------------+-------------------------------------+-------------+----------+

SMM.9.0 Disk and Volume Management
----------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SMM.9.0       | Disk and Volume Management          |    |ser|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for the        |
|  installation of a subsystem that supports hard disks to be managed          |
|  without incurring downtime:                                                 |
|                                                                              |
|  - Physical disks can be grouped into volumes and the volume definitions     |
|    can be modified without downtime.                                         |
|                                                                              |
|  - Filesystems that are defined within volumes can be enlarged without       |
|    requiring unmounting.                                                     |
|                                                                              |
|  - Support can be configured out if desired.                                 |
+---------------+-------------------------------------+-------------+----------+

SMM.12.0 Remote Boot Support (was PMT.2.0)
------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SMM.12.0      | Remote Boot Support (was            |    |ser|    |    P1    |
|               | PMT.2.0)                            |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for remote     |
|  booting across common LAN and WAN communication media to support            |
|  diskless systems.                                                           |
+---------------+-------------------------------------+-------------+----------+

SMM.13.0 Diskless Systems (was PMS.4.0)
---------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SMM.13.0      | Diskless Systems (was PMS.4.0)      |    |ser|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide for Linux on           |
|  diskless systems.                                                           |
+---------------+-------------------------------------+-------------+----------+

SMM.15 Thread Naming
--------------------
+----------------+---------------------+----------------------+----------------+
|       ID       |        Name         |       Category       |    Priority    |
+================+=====================+======================+================+
| SMM.15         | Thread Naming       |     |ser|            | P2             |
+----------------+---------------------+----------------------+----------------+
| Linux Foundation CGL specifies that carrier grade Linux shall                |
| provide the ability to uniquely identify threads with a symbolic name in     |
| addition to the existing process and thread ID mechanism.  These symbolic    |
| names can be assigned via an API exposed to applications and can be assigned |
| either at process / thread creation time or at any time after the process /  |
| thread has been started.                                                     |
|                                                                              |
| Reference: SCOPE Alliance Carrier Grade Gap CGOS_V3-3.0                      |
|                                                                              |
| PoC: Linux kernel                                                            |
+----------------+---------------------+----------------------+----------------+

SMM.16 System Black Box
-----------------------
+-------------+------------------------+----------------------+----------------+
|     ID      |          Name          |       Category       |    Priority    |
+=============+========================+======================+================+
| SMM.16      | System Black Box       |     |ser|            | P2             |
+-------------+------------------------+----------------------+----------------+
| Linux Foundation CGL specifies that carrier grade Linux shall                |
| provide a system-wide monitoring and logging facility, a system black box,   |
| with at least the following attributes:                                      |
|                                                                              |
|   * Kernel and operating system events must be logged to the black box.      |
|   * An API must be provided for applications to log events to the black box. |
|   * An API must be provided that allows controlling which events are logged  |
|     and from what facilities.                                                |
|   * All logged events must be stored in a way that will available following  |
|     a system crash / reboot.                                                 |
|   * Tools must be provided that can be used to analyze events following a    |
|     system crash / reboot.                                                   |
|                                                                              |
| Reference: SCOPE Alliance Carrier Grade Gap CGOS_V3-4.0                      |
+-------------+------------------------+----------------------+----------------+

SMM.17 Discovery of Platform CPU Architecture
---------------------------------------------
+------------+-------------------------------+-------------------+-------------+
|     ID     |             Name              |     Category      |  Priority   |
+============+===============================+===================+=============+
| SMM.17     | Discovery of Platform CPU     |     |ser|         | P1          |
|            | Architecture                  |                   |             |
+------------+-------------------------------+-------------------+-------------+
| Linux Foundation CGL specifies that carrier grade Linux shall                |
| provide a mechanism for applications to discover at runtime the number of    |
| caches and the sizes of each.  This mechanism must present such              |
| architectural information in a format that is uniform across platforms.      |
|                                                                              |
| Reference: SCOPE Alliance Carrier Grade Gap CGOS-6.1                         |
|                                                                              |
| PoC: sysfs                                                                   |
+------------+-------------------------------+-------------------+-------------+

SMM.18 API for Non-Uniform Memory Architectures
-----------------------------------------------
+------------+--------------------------------+-------------------+------------+
|     ID     |              Name              |     Category      |  Priority  |
+============+================================+===================+============+
| SMM.18     | API for Non-Uniform Memory     |     |ser|         | P1         |
|            | Architectures                  |                   |            |
+------------+--------------------------------+-------------------+------------+
| Linux Foundation CGL specifies that carrier grade Linux shall                |
| implement the notion of a latency domain, defined as a set of CPUs with      |
| directly attached, local memory.  All systems shall have at least one        |
| latency domain, representing a uniform memory architecture.  Additional      |
| latency domains can exist for non-uniform memory architectures, in which     |
| case carrier grade Linux will provide an API that allows a process to:       |
|                                                                              |
|   * Identify the NUMA topology of the system including:                      |
|        * The latency of each latency domain                                  |
|        * The number of CPUs                                                  |
|        * The amount of memory in the latency domain                          |
|                                                                              |
|   * Specify the desired memory allocation policy including:                  |
|        * Local: Memory allocations will first occur from the local latency   |
|          domain.                                                             |
|        * Specific: Memory allocations will first occur from the specified    |
|          latency domains.                                                    |
|        * Interleaved: Memory allocations will be spread across all latency   |
|          domains.                                                            |
|                                                                              |
| Reference: SCOPE Alliance Carrier Grade Gap CGOS-6.2                         |
|                                                                              |
| PoC: libnuma                                                                 |
+------------+--------------------------------+-------------------+------------+

SPM.1.0 Remote Package Update and Installation
----------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SPM.1.0       | Remote Package Update and           |    |ser|    |    P1    |
|               | Installation                        |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a remote software      |
|  package update feature. The package shall include functions that allow      |
|  kernel modules and application software to be installed or upgraded         |
|  remotely, while minimizing downtime of the system. The use of the term      |
|  "remotely" does not imply a central package management platform, nor        |
|  does it preclude such a system. This requirement only necessitates that     |
|  a single device may be upgraded without requiring the administrator to      |
|  be physically at the device. Note: Due to the wide range of platforms       |
|  and applications in use, CGL does not specify a specific downtime limit     |
|  metric. Downtime targets will vary based on the system application.         |
+---------------+-------------------------------------+-------------+----------+

SPM.2.0 No System Reboot for Upgrade of Kernel Modules
------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SPM.2.0       | No System Reboot for Upgrade        |    |ser|    |    P2    |
|               | of Kernel Modules                   |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide remote software        |
|  installation and upgrade mechanisms that requiring no system reboots:       |
|                                                                              |
|  - No reboot shall be required to upgrade kernel modules.                    |
|                                                                              |
|  - Remote software installation and upgrade mechanisms will not require      |
|    more reboots than the same upgrade done using the console.                |
+---------------+-------------------------------------+-------------+----------+

SPM.2.1 No System Reboot for Application Package Update
-------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SPM.2.1       | No System Reboot for                |    |ser|    |    P1    |
|               | Application Package Update          |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide remote software        |
|  installation and upgrade mechanisms that require no system reboots:         |
|                                                                              |
|  - No reboot shall be required to upgrade user-space applications            |
|    provided by CGL system software.                                          |
+---------------+-------------------------------------+-------------+----------+

SPM.3.0 Version and Dependency Checking via Package Management
--------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SPM.3.0       | Version and Dependency              |    |ser|    |    P1    |
|               | Checking via Package                |             |          |
|               | Management                          |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide remote software        |
|  installation and upgrade capabilities that include provisions for           |
|  version compatibility and dependency checking at the package level.         |
+---------------+-------------------------------------+-------------+----------+

SPM.4.0 Upgrade Log
-------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SPM.4.0       | Upgrade Log                         |    |ser|    |    P2    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide remote software        |
|  installation and upgrade mechanisms that perform transaction logging of     |
|  dates, times, changes, and the identity of the user performing a change.    |
+---------------+-------------------------------------+-------------+----------+

SFA.1.0 Kernel Panic Handler Enhancements
-----------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SFA.1.0       | Kernel Panic Handler                |    |ser|    |    P1    |
|               | Enhancements                        |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide enriched               |
|  capabilities in response to a system panic. Currently the default system    |
|  panic behavior is to print a short message to the console and halt the      |
|  system. CGL systems shall provide a set of configurable functions,          |
|  including:                                                                  |
|                                                                              |
|  - Logging the panic event to the system event log                           |
|                                                                              |
|  - Cycling power (rebooting) or powering off                                 |
|                                                                              |
|  - Forcing a crash dump                                                      |
|                                                                              |
|  CGL shall support enhanced kernel panic                                     |
|  reporting, at a minimum supporting proper resolution of in-kernel           |
|  symbols. This will make kernel panic reports useful to administrators       |
|  that do not have access to the kernel for which the report was              |
|  generated.                                                                  |
+---------------+-------------------------------------+-------------+----------+

SFA.2.1 Live Kernel Remote Debugger
-----------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SFA.2.1       | Live Kernel Remote Debugger         |    |ser|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for remote     |
|  debugging of a live kernel. This shall include support over serial and/or   |
|  local Ethernet.                                                             |
+---------------+-------------------------------------+-------------+----------+

SFA.2.2 Dynamic Probe Insertion
-------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SFA.2.2       | Dynamic Probe Insertion             |    |ser|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for the        |
|  ability to dynamically insert software instrumentation into a running       |
|  system in the kernel or applications.                                       |
|                                                                              |
|  - The instrumentation must be insertable to any part of the kernel.         |
|                                                                              |
|  - The instrumentation should allow control to be passed to a                |
|    user-provided module.                                                     |
|                                                                              |
|  - The instrumentation should not require interactive direction, i.e., no    |
|    user sitting at the kernel debugger.                                      |
|                                                                              |
|  - The user-provided modules should have access to data the kernel would     |
|    normally be expected to have access to, e.g., hardware registers,         |
|    kernel                                                                    |
+---------------+-------------------------------------+-------------+----------+

SFA.2.3 User Space Debug Support for Threads
--------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SFA.2.3       | User Space Debug Support for        |    |ser|    |    P1    |
|               | Threads                             |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support to fully       |
|  enable debugging of multi-t hreaded programs. This support should allow     |
|  any actions available for debugging a single-threaded (non-threaded)        |
|  process be extended to be available for every thread in a multi-threaded    |
|  process. CGL shall provide specific additional debugging capabilities       |
|  that are unique to multi-threaded applications:                             |
|                                                                              |
|  - Automatic notification of a new thread.                                   |
|                                                                              |
|  - List of threads and the ability to switch among them.                     |
|                                                                              |
|  - Apply specific debug commands to a list of threads.                       |
+---------------+-------------------------------------+-------------+----------+

SFA.2.4 Multithreaded Core Dump Support for Threaded Applications
-----------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SFA.2.4       | Multithreaded Core Dump             |    |ser|    |    P1    |
|               | Support for Threaded                |             |          |
|               | Applications                        |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for            |
|  correctly storing core dumps of multi-threaded user-space applications.     |
+---------------+-------------------------------------+-------------+----------+

SFA.3.0 Kernel Dump: Analysis
-----------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SFA.3.0       | Kernel Dump: Analysis               |    |ser|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for tools      |
|  to enable enhanced analysis of kernel dumps. These enhancements must        |
|  include, but not be limited to, the following capabilities:                 |
|                                                                              |
|  - Access to kernel structures                                               |
|                                                                              |
|  - Virtual-to-physical address translation                                   |
|                                                                              |
|  - Module access                                                             |
|                                                                              |
|  - Preserve all tools and CPU states                                         |
+---------------+-------------------------------------+-------------+----------+

SFA.4.0 Kernel Dump: Limit Scope
--------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SFA.4.0       | Kernel Dump: Limit Scope            |    |ser|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for            |
|  configuring the amount of system information that is retained. The          |
|  minimum type of configuration would be only kernel memory or all system     |
|  memory. A way must be provided for a system administrator to specify        |
|  which type of system dump should be performed.                              |
+---------------+-------------------------------------+-------------+----------+

SFA.8.0 Kernel Flat/Graph Execution Profiling
---------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SFA.8.0       | Kernel Flat/Graph Execution         |     |ser|   |    P1    |
|               | Profiling                           |             |          |
+---------------+-------------------------------------+-------------+----------+
|   CGL specifies that carrier grade Linux shall provide support for           |
|   profiling of the running kernel using a prof or gprof style of             |
|   recording trace information during system execution.                       |
+---------------+-------------------------------------+-------------+----------+

SFA.10.0 Kernel Dump: Configurable Destinations
-----------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SFA.10.0      | Kernel Dump: Configurable           |    |ser|    |    P1    |
|               | Destinations                        |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for            |
|  producing and storing kernel dumps as follows:                              |
|                                                                              |
|  - It must be possible to store kernel dumps to disk and across a            |
|    network.                                                                  |
|                                                                              |
|  - Regardless of the specific dump target, dumps must be preserved across    |
|    the next system boot.                                                     |
+---------------+-------------------------------------+-------------+----------+

Performance Requirements
========================
.. |per| replace:: Performance 

PRF.1.4 High-Resolution Timers
------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| PRF.1.4       | High-Resolution Timers              |    |per|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide high-resolution        |
|  timer support. As specified by POSIX 1003.1b section 14, Clocks and         |
|  Timers API.                                                                 |
+---------------+-------------------------------------+-------------+----------+

PRF.1.7 Handling Interrupts As Threads
--------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| PRF.1.7       | Handling Interrupts As Threads      |    |per|    |    P2    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall enable handling of             |
|  interrupt handlers (top half and bottom half) as a task-based process       |
|  rather than in interrupt processing routine mechanism to allow:             |
|                                                                              |
|  - A mutex-based critical section inside an interrupt handler.               |
|                                                                              |
|  - The ability for an interrupt handler to sleep.                            |
|                                                                              |
|  - Prioritization of an interrupt handler based on real-time scheduling      |
|    priorities.                                                               |
|                                                                              |
|  - Affinity and load-balancing in an SMP.  Context switching overhead        |
|    should be considered case by case in the application design. The          |
|    interrupts are divided into a critical urgent part that kernel needs      |
|    to execute quickly, and deferrable part. The thread based interrupt       |
|    handler should be applied at deferrable part.                             |
+---------------+-------------------------------------+-------------+----------+

PRF.2.1 Enabling Process Affinity
---------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| PRF.2.1       | Enabling Process Affinity           |    |per|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall enable process affinity.       |
|  Process affinity enables a process to run on an explicitly designated       |
|  processor. When process affinity is used, it provides more efficient        |
|  caching. For example, it must be possible to bind real-time processes to    |
|  specified processors.                                                       |
+---------------+-------------------------------------+-------------+----------+

PRF.2.2 Enabling Interrupt CPU Affinity
---------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| PRF.2.2       | Enabling Interrupt CPU Affinity     |    |per|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall enable interrupt CPU           |
|  affinity. The interrupts are divided into a critical urgent part that       |
|  the kernel needs to execute quickly and a deferrable part. CGL should       |
|  enable interrupt CPU affinity on the critical urgent part. Note: The        |
|  latest stable kernel enables interrupt affinity based on the /proc          |
|  configuration interface.                                                    |
+---------------+-------------------------------------+-------------+----------+

PRF.2.3 (Hyper-Threading) Optimized SMT Support
-----------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| PRF.2.3       | (Hyper-Threading) Optimized         |    |per|    |    P1    |
|               | SMT Support                         |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall enable optimized symmetric     |
|  multi-threading (SMT) processors and interrupt migration between logical    |
|  processors. Note: The latest stable kernel enables this feature.            |
+---------------+-------------------------------------+-------------+----------+

PRF.4.2 Support of Gigabit Ethernet Jumbo MTU
---------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| PRF.4.2       | Support of Gigabit Ethernet         |    |per|    |    P1    |
|               | Jumbo MTU                           |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall enable support for a 9000      |
|  byte Maximum Transmission Unit (MTU) for the Gigabit Ethernet protocol      |
|  to enable lower CPU overhead and better throughput. This shall be a         |
|  configurable option as some applications may prefer low latency to large    |
|  message sizes. Hardware support is required.                                |
+---------------+-------------------------------------+-------------+----------+

PRF.5.0 Efficient Low-Level Asynchronous Events
-----------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| PRF.5.0       | Efficient Low-Level                 |    |per|    |    P1    |
|               | Asynchronous Events                 |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide an API for             |
|  applications that allows asynchronous notifications to be delivered based   |
|  either level or edge triggers.                                              |
+---------------+-------------------------------------+-------------+----------+

PRF.6.0 Managing Transient Data
-------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| PRF.6.0       | Managing Transient Data             |    |per|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for a          |
|  self resizing, file system stored in virtual memory for transient data that |
|  can be limited to a maximum size.                                           |
+---------------+-------------------------------------+-------------+----------+

PRF.7.0 Interruptless Ethernet Delivery
---------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| PRF.7.0       | Interruptless Ethernet              |    |per|    |    P1    |
|               | Delivery                            |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide for the capability     |
|  for Ethernet drivers to operate in a pure polling mode in which they do     |
|  not generate interrupts for arriving frames. This is to prevent             |
|  interrupt-storms from consuming too many CPU cycles. This is primarily      |
|  an issue for gigabit Ethernet.                                              |
+---------------+-------------------------------------+-------------+----------+

PRF.8.0 Network Storage block level Replication Performances
------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| PRF.8.0       | Network Storage block level         |    |per|    |    P2    |
|               | Replication Performances            |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a network storage      |
|  replication service with the following performance levels:                  |
|                                                                              |
|  - Less than 30% decrease in user throughput compared to local storage       |
|    access using a network interface and with full available network          |
|    bandwidth.                                                                |
|                                                                              |
|  - Less than 25% decrease in user throughput during resynchronization of     |
|    redundant devices compared with normal throughput when devices are        |
|    synchronized.                                                             |
+---------------+-------------------------------------+-------------+----------+

PRF.14.0 RAID 0 Support
-----------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| PRF.14.0      | RAID 0 Support                      |    |per|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide RAID 0 (striping)      |
|  support that stripes data across multiple disks without any redundant       |
|  information to enhance performance in either a request-rate-intensive or    |
|  transfer-rate-intensive environment.                                        |
+---------------+-------------------------------------+-------------+----------+


Standards Requirements
======================
.. |std| replace:: Standards 

STD.1.0 Linux Standard Base Compliance
--------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.1.0       | Linux Standard Base Compliance      |    |std|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  http://www.linuxbase.org Description: CGL specifies that carrier grade      |
|  Linux shall be compliant with the Linux Standard Base (LSB) 3.0 The LSB     |
|  3.0 specification has been split into a generic LSB core, a generic         |
|  module for C++, and a set of architecture specific modules. Required LSB    |
|  3.0 modules for CGL are:                                                    |
|                                                                              |
|  - Generic LSB-Core                                                          |
|                                                                              |
|  - Generic LSB-CXX                                                           |
|                                                                              |
|  - For each supported architecture, one LSB-Core module and one LSB-CXX      |
|    module                                                                    |
|                                                                              |
|  The developer may choose to implement more than one architecture            |
|  platform. In this case, each supported architecture platform shall          |
|  contain an implementation of at least one architecture specific LSB-Core    |
|  module and one architecture specific LSB-CXX module.                        |
+---------------+-------------------------------------+-------------+----------+

STD.3.1 SCTP - Base Features
----------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.3.1       | SCTP: Base Features                 |    |std|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs below.                                                   |
|                                                                              |
|  - RFC 2960_ - The base standard for SCTP.                                   |
|                                                                              |
|  - RFC 3309_ - An RFC that corrects a weakness in the original SCTP for      |
|    very small packets.                                                       |
+---------------+-------------------------------------+-------------+----------+

STD.3.2.1 SCTP: Additional Features
-----------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.3.2.1     | SCTP: Additional Features           |    |std|    |    P2    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs below:                                                   |
|                                                                              |
|  - RFC 4460_ - Stream Control Transmission Protocol (SCTP) Specification     |
|                Errata and Issues                                             |
+---------------+-------------------------------------+-------------+----------+

STD.3.2.2 Extensions to BSD Sockets to support SCTP
---------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.3.2.2     | Extensions to BSD Sockets to        |    |std|    |    P2    |
|               | support SCTP                        |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the Internet draft below:                                         |
|                                                                              |
|  - draft-ietf-tsvwg-sctpsocket-13.txt                                        |
|                                                                              |
|  Carrier Grade Linux Standards Requirements Definition Version 4.0           |
+---------------+-------------------------------------+-------------+----------+

STD.3.2.3 RFC 3873 MIB for SCTP
-------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.3.2.3     | RFC 3873 MIB for SCTP               |    |std|    |    P2    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the Internet draft below.                                         |
|                                                                              |
|  - RFC 3873_, MIB for SCTP                                                   |
+---------------+-------------------------------------+-------------+----------+

STD.3.2.4 Extension for adding IP addresses to SCTP association
---------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.3.2.4     | Extension for adding IP             |    |std|    |    P2    |
|               | addresses to SCTP association       |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the Internet draft below:                                         |
|                                                                              |
|  - draft-ietf-tsvwg-addip-sctp-15.txt: An extension to SCTP that allows      |
|    adding and removing IP addresses to an existing SCTP association. This    |
|    extension is needed to allow for associations that last longer than       |
|    expiring IPv6 addresses.                                                  |
+---------------+-------------------------------------+-------------+----------+

STD.3.2.5 RFC 3758 Partial reliability
--------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.3.2.5     | RFC 3758 Partial reliability        |    |std|    |    P2    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFC below:                                                    |
|                                                                              |
|  - RFC 3758_ - An extension to SCTP allowing for partial reliability.        |
|    Introduces a mechanism for canceling messages no longer worth sending.    |
+---------------+-------------------------------------+-------------+----------+

STD.3.2.6 SCTP Threats
----------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.3.2.6     | SCTP Threats                        |    |std|    |    P2    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the Internet draft below:                                         |
|                                                                              |
|  - draft-ietf-tsvwg-sctpthreat-02.txt: Documents additional security         |
|    issues that implementers need to address.                                 |
+---------------+-------------------------------------+-------------+----------+

STD.4.1 IPv6 Base Features
--------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.4.1       | IPv6 Base Features                  |    |std|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the IPv6               |
|  functionality listed in the RFCs below:                                     |
|                                                                              |
|  - RFC 2460_: IPv6 Specification                                             |
|                                                                              |
|  - RFC 2463_: ICMPv6 for IPv6 Specification                                  |
|                                                                              |
|  - RFC 2461_: Neighbor Discovery for IP Version 6 (IPv6)                     |
|                                                                              |
|  - RFC 2462_: IPv6 Stateless Address Autoconfiguration                       |
|                                                                              |
|  - RFC 1981_: Path MTU Discovery for IP version 6                            |
|                                                                              |
|  - RFC 3493_: Basic Socket Interface Extensions for IPv6                     |
|                                                                              |
|  - RFC 3542_: Advanced Sockets Application Program Interface (API) for       |
|    IPv6                                                                      |
|                                                                              |
|  - RFC 3587_: Global Unicast IPv6 Address Format                             |
|                                                                              |
|  - RFC 2710_: Multicast Listener Discovery for IPv6                          |
|                                                                              |
|  - RFC 3810_: Multicast Listener Discovery Version 2                         |
+---------------+-------------------------------------+-------------+----------+

STD.4.2.1 IPv6 Additional Features: RFC 2451 Ciphers
----------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.4.2.1     | IPv6 Additional Features: RFC       |    |std|    |    P2    |
|               | 2451 Ciphers                        |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs and internet drafts below:                               |
|                                                                              |
|  - RFC 2451_: The ESP CBC-Mode Cipher Algorithms                             |
+---------------+-------------------------------------+-------------+----------+

STD.4.2.2 IPv6 Additional Features: RFC 4213/2893 Tunnels
---------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.4.2.2     | IPv6 Additional Features: RFC       |    |std|    |    P2    |
|               | 4213/2893 Tunnels                   |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs and internet drafts below:                               |
|                                                                              |
|  - RFC 4213_ which replaces                                                  |
|                                                                              |
|  - RFC 2893_: Transition Mechanisms for IPv6 Hosts and Routers (IPv6 over    |
|    IPv4 Tunnel)                                                              |
+---------------+-------------------------------------+-------------+----------+

STD.4.2.3 IPv6 Additional Features: RFC 3484 Default Address Selection
----------------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.4.2.3     | IPv6 Additional Features: RFC       |    |std|    |    P2    |
|               | 3484 Default Address Selection      |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs and internet drafts below:                               |
|                                                                              |
|  - RFC 3484_: Default Address Selection for Internet Protocol version 6      |
|    (IPv6).                                                                   |
+---------------+-------------------------------------+-------------+----------+

STD.4.2.4 IPv6 Additional Features: RFC 3315 Dynamic Host Configuration
-----------------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.4.2.4     | IPv6 Additional Features: RFC       |    |std|    |    P2    |
|               | 3315 Dynamic Host                   |             |          |
|               | Configuration                       |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs and internet drafts below:                               |
|                                                                              |
|  - RFC 3315_: Dynamic Host Configuration Protocol for IPv6 (DHCPv6).         |
+---------------+-------------------------------------+-------------+----------+

STD.4.2.5 IPv6 Additional Features: RFC 3633 Prefix Options for Dynamic Host Configuration Protocol
---------------------------------------------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.4.2.5     | IPv6 Additional Features: RFC       |    |std|    |    P2    |
|               | 3633 Prefix Options for             |             |          |
|               | Dynamic Host                        |             |          |
|               | Configuration Protocol              |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs and internet drafts below:                               |
|                                                                              |
|  - RFC 3633_: IPv6 Prefix Options for Dynamic Host Configuration Protocol    |
|    (DHCP) version 6                                                          |
+---------------+-------------------------------------+-------------+----------+

STD.4.2.6 IPv6 Additional Features: RFC 4191_ Default Router Preferences
------------------------------------------------------------------------

+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.4.2.6     | IPv6 Additional Features: RFC       |    |std|    |    P2    |
|               | 4191_ Default Router                |             |          |
|               | Preferences                         |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs and internet drafts below:                               |
|                                                                              |
|  - RFC 4191_: Default Router Preferences, More-Specific Routes, and Load     |
|    Sharing                                                                   |
+---------------+-------------------------------------+-------------+----------+

STD.4.2.7 IPv6 Additional Features: RFC 2428 FTP Extensions
-----------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.4.2.7     | IPv6 Additional Features: RFC       |    |std|    |    P2    |
|               | 2428 FTP Extensions                 |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs and internet drafts below:                               |
|                                                                              |
|  - RFC 2428_: FTP Extensions for IPv6 and NATs                               |
+---------------+-------------------------------------+-------------+----------+

STD.4.2.8 IPv6 Additional Features: RFC 3596 DNS Extensions
-----------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.4.2.8     | IPv6 Additional Features: RFC       |    |std|    |    P2    |
|               | 3596 DNS Extensions                 |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs and internet drafts below:                               |
|                                                                              |
|  - RFC 1886_: DNS Extensions to support IP version 6                         |
+---------------+-------------------------------------+-------------+----------+

STD.4.2.9 IPv6 Additional Features: RFC 2874 DNS Address Aggregation and Renumbering
------------------------------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.4.2.9     | IPv6 Additional Features: RFC       |    |std|    |    P2    |
|               | 2874 DNS Address Aggregation        |             |          |
|               | and Renumbering                     |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs and internet drafts below:                               |
|                                                                              |
|  - RFC 2874_: DNS Extensions to Support IPv6 Address Aggregation and         |
|    Renumbering                                                               |
+---------------+-------------------------------------+-------------+----------+

STD.4.2.10 IPv6 Additional Features: RFC 3646_ DNS options for DHCP
-------------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.4.2.10    | IPv6 Additional Features: RFC       |    |std|    |    P2    |
|               | 3646 DNS options for DHCP           |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs and internet drafts below:                               |
|                                                                              |
|  - RFC 3646_: DNS options for Dynamic Host Configuration Protocol for        |
|    IPv6 (DHCPv6)                                                             |
+---------------+-------------------------------------+-------------+----------+

STD.4.2.13 IPv6 Additional Features: NFS
----------------------------------------
+--------------+-----------------------------------+--------------+------------+
|      ID      |               Name                |   Category   |  Priority  |
+==============+===================================+==============+============+
| STD.4.2.13   | IPv6 Additional Features: NFS     |   |std|      | P2         |
+--------------+-----------------------------------+--------------+------------+
| Linux Foundation CGL specifies that carrier grade Linux shall                |
| provide support for IPv6-based NFS.                                          |
|                                                                              |
| Reference: SCOPE Alliance Carrier Grade Gap CGOS-5.2                         |
|                                                                              |
| PoC: Mainline kernel and NFSv4                                               |
| / http://wiki.linux-nfs.org/wiki/index.php/Ipv6PlanningDocument              |
+--------------+-----------------------------------+--------------+------------+

STD.5.1 IPSec Major CGL Features
--------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.5.1       | IPSec Major CGL Features            |    |std|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs below.                                                   |
|                                                                              |
|  - RFC 2367_: PF_KEY Key Management API, Version 2                           |
|                                                                              |
|  - RFC 2401_: Security Architecture for the Internet Protocol                |
|                                                                              |
|  - RFC 2402_: IP Authentication Header                                       |
|                                                                              |
|  - RFC 2406_: IP Encapsulating Security Payload (ESP)                        |
|                                                                              |
|  - RFC 2403_: The Use of HMAC-MD5-96 within ESP and AH                       |
|                                                                              |
|  - RFC 2404_: The Use of HMAC-SHA -1-96 within ESP and AH                    |
|                                                                              |
|  - RFC 2405_: The ESP DES-CBC Cipher Algorithm With Explicit IV              |
|                                                                              |
|  - RFC 2409_: Support for IKE daemon                                         |
|                                                                              |
|  - RFC 2410_: The NULL Encryption Algorithm and Its Use With Ipsec           |
|                                                                              |
|  - RFC 2451_: The ESP CBC-Mode Cipher Algorithms                             |
+---------------+-------------------------------------+-------------+----------+

STD.5.2.1 IPSec Minor CGL Features: RFC 4301 Security Architecture for IP
-------------------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.5.2.1     | IPSec Minor CGL Features: RFC       |    |std|    |    P2    |
|               | 4301 Security Architecture for      |             |          |
|               | IP                                  |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs and internet drafts below:                               |
|                                                                              |
|  - RFC 4301_: Security Architecture for the Internet Protocol (obsoletes     |
|    2401)NEPS/Motorola flush needed RFCs.                                     |
+---------------+-------------------------------------+-------------+----------+

STD.5.2.2 IPSec Minor CGL Features: RFC 4302 IP Authentication Header
---------------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.5.2.2     | IPSec Minor CGL Features: RFC       |    |std|    |    P2    |
|               | 4302 IP Authentication Header       |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs and internet drafts below:                               |
|                                                                              |
|  - RFC 4302_: IP Authentication Header (obsoletes 2402)                      |
+---------------+-------------------------------------+-------------+----------+

STD.5.2.3 IPSec Minor CGL Features: RFC 4303 IP Encapsulating Security Payload
------------------------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.5.2.3     | IPSec Minor CGL Features: RFC       |    |std|    |    P2    |
|               | 4303 IP Encapsulating Security      |             |          |
|               | Payload                             |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs and internet drafts below:                               |
|                                                                              |
|  - RFC 4303_: IP Encapsulating Security Payload (ESP) (obsoletes 2406)       |
+---------------+-------------------------------------+-------------+----------+

STD.5.2.4 IPSec Minor CGL Features: RFC 4305 Cryptographic Algorithm Requirements
---------------------------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.5.2.4     | IPSec Minor CGL Features: RFC       |    |std|    |    P2    |
|               | 4305 Cryptographic Algorithm        |             |          |
|               | Requirements                        |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs and internet drafts below:                               |
|                                                                              |
|  - RFC 4305_: Cryptographic Algorithm Implementation Requirements for        |
|    Encapsulating Security Payload (ESP) and Authentication Header (AH)       |
|    (obsoletes 2402_ and 2406_)                                               |
+---------------+-------------------------------------+-------------+----------+

STD.5.2.5 IPSec Minor CGL Features: RFC 4307 Cryptographic Algorithms for Use in IKE
------------------------------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.5.2.5     | IPSec Minor CGL Features: RFC       |    |std|    |    P2    |
|               | 4307 Cryptographic Algorithms       |             |          |
|               | for Use in IKE                      |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs and internet drafts below:                               |
|                                                                              |
|  - RFC 4307_: Cryptographic Algorithms for Use in the Internet Key           |
|    Exchange Version 2                                                        |
+---------------+-------------------------------------+-------------+----------+

STD.5.2.6 IPSec Minor CGL Features: RFC 4322 Opportunistic Encryption using IKE
-------------------------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.5.2.6     | IPSec Minor CGL Features: RFC       |    |std|    |    P2    |
|               | 4322 Opportunistic Encryption       |             |          |
|               | using IKE                           |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs and internet drafts below:                               |
|                                                                              |
|  - RFC 4322_: Opportunistic Encryption using the Internet Key Exchange       |
|    (IKE) -- This document is not part of the basic set of standards          |
|    required to support IPSec, but is useful if a customer wants to set up    |
|    IPSec tunnels without coordinating with the administrators at the         |
|    other end of the tunnels.                                                 |
+---------------+-------------------------------------+-------------+----------+

STD.5.2.7 IPSec Minor CGL Features: RFC 4434 AES Algorithm for IKE
------------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.5.2.7     | IPSec Minor CGL Features: RFC       |    |std|    |    P2    |
|               | 4434 AES Algorithm for IKE          |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs and internet drafts below:                               |
|                                                                              |
|  - RFC 4434_: The AES-XCBC-PRF-128 Algorithm for the Internet Key            |
|    Exchange Protocol (IKE)                                                   |
+---------------+-------------------------------------+-------------+----------+

STD.6.1 MIPv6 CGL Major Features
--------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.6.1       | MIPv6 CGL Major Features            |    |std|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFC below.                                                    |
|                                                                              |
|  - RFC 3775_: Mobility Support in IPv6                                       |
+---------------+-------------------------------------+-------------+----------+

STD.6.2 MIPv6 Minor CGL Features
--------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.6.2       | IPv6 Minor CGL Features             |    |std|    |    P2    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  listed in the RFCs below.                                                   |
|                                                                              |
|  - RFC 3776_: Using IPsec to Protect Mobile IPv6 Signaling Between Mobile    |
|    Nodes and Home Agents.                                                    |
+---------------+-------------------------------------+-------------+----------+

STD.7.1 SNMP v1, v2, v3
-----------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.7.1       | SNMP v1, v2, v3                     |    |std|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide SNMPv1, SNMPv2, and    |
|  SNMPv3 functionality as defined in the RFCs listed below.                   |
|                                                                              |
|  - SNMPv1 - RFC 1155_ through 1157_                                          |
|                                                                              |
|  - Community-based SNMPv2 - RFCs 1901_ through 1908_                         |
|                                                                              |
|  - SNMPv3 - RFC 2571_ through  2575_                                         |
+---------------+-------------------------------------+-------------+----------+

STD.7.2 SNMP MIBs for IPv6/IPv4
-------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.7.2       | SNMP MIBs for IPv6/IPv4             |    |std|    |    P2    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  for the SNMP IPv6/IPv4 MIBs as defined by the RFCs listed below:            |
|                                                                              |
|  - RFC 3411_ SNMP-FRAMEWORK-MIB.txt                                          |
|                                                                              |
|  - RFC 3412_ SNMP-MPD-MIB.txt                                                |
|                                                                              |
|  - RFC 3413_ SNMP-TARGET-MIB.txt, SNMP-NOTIFICATION-MIB.txt,                 |
|    SNMP-PROXY-MIB.txt                                                        |
|                                                                              |
|  - RFC 3414_ SNMP-USER-BASED-SM- MIB.txt                                     |
|                                                                              |
|  - RFC 3415_ SNMP-VIEW-BASED-ACM- MIB.txt                                    |
|                                                                              |
|  - RFC 2576_ SNMP-COMMUNITY -MIB.txt                                         |
|                                                                              |
|  - RFC 2578_ SNMPv2-SMI.txt                                                  |
|                                                                              |
|  - RFC 2579_ SNMPv2-TC.txt                                                   |
|                                                                              |
|  - RFC 2580_ SNMPv2-CONF.txt                                                 |
|                                                                              |
|  - RFC 3417_ SNMPv2-TM.txt                                                   |
|                                                                              |
|  - RFC 3418_ SNMPv2-MIB.txt                                                  |
|                                                                              |
|  - RFC 2742_ AGENTX-MIB.txt                                                  |
|                                                                              |
|  - RFC 1227_ SMUX-MIB.txt                                                    |
|                                                                              |
|  - RFC 3231_ DISMAN-SCHEDULE-MIB.txt                                         |
|                                                                              |
|  - RFC 3165_ DISMAN-SCRIPT-MIB.txt                                           |
|                                                                              |
|  - RFC 2863_ IF-MIB.txt                                                      |
|                                                                              |
|  - RFC 2864_ IF-INVERTED-STACK-MIB.txt                                       |
|                                                                              |
|  - RFC 2856_ HCNUM-TC.txt                                                    |
|                                                                              |
|  - RFC 3291_ INET-ADDRESS-MIB.txt                                            |
|                                                                              |
|  - RFC 2665_ EtherLike-MIB.txt                                               |
|                                                                              |
|  - RFC 2011_ IP-MIB.txt                                                      |
|                                                                              |
|  - RFC 2096_ IP-FORWARD-MIB.txt                                              |
|                                                                              |
|  - RFC 2012_ TCP-MIB.txt                                                     |
|                                                                              |
|  - RFC 2013_ UDP -MIB.txt                                                    |
|                                                                              |
|  - RFC 2465_ IPV6-TC.txt IPV6-MIB.txt                                        |
|                                                                              |
|  - RFC 2466_ IPV6-ICMP-MIB.txt                                               |
|                                                                              |
|  - RFC 2452_ IPV6-TCP-MIB.txt                                                |
|                                                                              |
|  - RFC 2454_ IPV6-UDP-MIB.txt                                                |
|                                                                              |
|  - RFC 2790_ HOST-RESOURCES-MIB.txt, HOST-RESOURCES-TYPES.txt                |
|                                                                              |
|  - RFC 2819_ RMON-MIB.txt                                                    |
|                                                                              |
|  - RFC 2788_ NETWORK -SERVICES- MIB.txt                                      |
|                                                                              |
|  - RFC 2789_ MTA -MIB.txt                                                    |
|                                                                              |
|  - RFC 1155_ -SMI.txt                                                        |
|                                                                              |
|  - RFC 1213_ -MIB.txt                                                        |
|                                                                              |
|  Note: There is currently an ongoing effort within IETF to combine IPv4      |
|  and IPv6 MIBs into unified MIBs. The developer may choose to implement      |
|  RFC 2011_, RFC 2466_.                                                       |
+---------------+-------------------------------------+-------------+----------+

STD.8.1 SA Forum AIS http://www.saforum.org
-------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.8.1       | SA Forum AIS                        |    |std|    |    P2    |
|               | http://www.saforum.org              |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the APIs as defined    |
|  by the SA Forum AIS Release 5 or a subsequent level of the relevant AIS     |
|  specification                                                               |
+---------------+-------------------------------------+-------------+----------+

STD.8.8 SA Forum HPI http://www.saforum.org
-------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.8.8       | SA Forum HPI                        |    |std|    |    P1    |
|               | http://www.saforum.org              |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  defined in the SA Forum HPI B.02.01 specification or a subsequent level     |
|  of the relevant HPI specification.                                          |
+---------------+-------------------------------------+-------------+----------+

STD.9.0 IPMI 
-------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.9.0       | IPMI                                |    |std|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the System Management  |
|  Software (SMS) functionality to interface with the below-listed levels of   |
|  the Intelligent Platform Management Interface (IPMI):                       |
|                                                                              |
|  - IPMI v1.5 specification                                                   |
|                                                                              |
|  - IPMI v2.0 specification                                                   |
+---------------+-------------------------------------+-------------+----------+

STD.10.0 802.1Q VLAN Endpoint
-----------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.10.0      | 802.1Q VLAN Endpoint                |    |std|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  defined in the IEEE Std 802.1Q-1998 specification. This standard defines    |
|  the operation of virtual LAN (VLAN) endpoints that permit the definition,   |
|  operation and administration of Virtual LAN topologies within a LAN         |
|  infrastructure.                                                             |
|                                                                              |
|  http://www.ieee802.org/1/pages/802.1Q.html                                  |
+---------------+-------------------------------------+-------------+----------+

STD.11.1 Diameter Protocol CGL Major Features
---------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.11.1      | Diameter Protocol CGL Major         |    |std|    |    P2    |
|               | Features                            |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  defined in the following RFCs and Internet drafts.                          |
|                                                                              |
|  - RFC 3588_ (Diameter Base Protocol)                                        |
|                                                                              |
|  - draft-ietf-eap-rfc2284bis-07.txt                                          |
|                                                                              |
|  - draft-ietf-aaa-eap-03.txt                                                 |
+---------------+-------------------------------------+-------------+----------+

STD.11.2 Diameter Protocol Minor CGL Features
---------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.11.2      | Diameter Protocol Minor CGL         |    |std|    |    P2    |
|               | Features                            |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  defined in the following Internet drafts.                                   |
|                                                                              |
| RFC 4004                                                                     |
+---------------+-------------------------------------+-------------+----------+

STD.17.1 iSCSI Support: RFC 3270 iSCSI 
---------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.17.1      | iSCSI Support: RFC 3270 iSCSI       |    |std|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for            |
|  Internet Small Computer Systems Interface (iSCSI) Initiators. The iSCSI     |
|  Initiators shall support IPv6, SNMP MIBs, error handling, target            |
|  discovery, and multiple sessions. This functionality is defined in the      |
|  following RFCs:                                                             |
|                                                                              |
|  - RFC 3720_ - Internet Small Computer Systems Interface (iSCSI)reqs,        |
|    determine which are P1                                                    |
+---------------+-------------------------------------+-------------+----------+

STD.17.2 iSCSI Support: RFC 3271 iSCSI Naming & Discovery
---------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.17.2      | iSCSI Support: RFC 3271 iSCSI       |    |std|    |    P1    |
|               | Naming & Discovery                  |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for            |
|  Internet Small Computer Systems Interface (iSCSI) Initiators. The iSCSI     |
|  Initiators shall support IPv6, SNMP MIBs, error handling, target            |
|  discovery, and multiple sessions. This functionality is defined in the      |
|  following RFCs:                                                             |
|                                                                              |
|  - RFC 3721_ - Internet Small Computer Systems Interface (iSCSI) Naming      |
|    and Discovery                                                             |
+---------------+-------------------------------------+-------------+----------+

STD.17.3 iSCSI Support: RFC 3273 iSCSI Securing Block Storage Protocols over IP
-------------------------------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.17.3      | iSCSI Support: RFC 3273 iSCSI       |    |std|    |    P1    |
|               | Securing Block Storage              |             |          |
|               | Protocols over IP                   |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for            |
|  Internet Small Computer Systems Interface (iSCSI) Initiators. The iSCSI     |
|  Initiators shall support IPv6, SNMP MIBs, error handling, target            |
|  discovery, and multiple sessions. This functionality is defined in the      |
|  following RFCs:                                                             |
|                                                                              |
|  - RFC 3723_ - Securing Block Storage Protocols over IP                      |
+---------------+-------------------------------------+-------------+----------+

STD.18.1 Differentiated Services: RFC 2474 Definition
-----------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.18.1      | Differentiated Services: RFC        |    |std|    |    P2    |
|               | 2474 Definition                     |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for            |
|  differentiated services for IPv4 protocol as defined by the RFCs below.     |
|  Differentiated services provide network traffic with different levels of    |
|  service to enable quality of service and traffic control.                   |
|                                                                              |
|  - RFC 2474_ - Definition of the Differentiated Services Field (DS Field)    |
|    in the IPv4 and IPv6 Headers                                              |
+---------------+-------------------------------------+-------------+----------+

STD.18.2 Differentiated Services: RFC 2475 Definition
-----------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.18.2      | Differentiated Services: RFC        |    |std|    |    P2    |
|               | 2475 Definition                     |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for            |
|  differentiated services for IPv4 protocol as defined by the RFCs below.     |
|  Differentiated services provide network traffic with different levels of    |
|  service to enable quality of service and traffic control.                   |
|                                                                              |
|  - RFC 2475_ - An Architecture for Differentiated Services                   |
+---------------+-------------------------------------+-------------+----------+

STD.20.1 PKI CA: RFC 2527 X.509 PKI
-----------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.20.1      | PKI CA: RFC 2527 X.509 PKI          |    |std|    |  P2      |
+---------------+-------------------------------------+-------------+----------+
| CGL specifies that carrier grade Linux shall provide the functionality for   |
| private key infrastructure (PKI) support as defined in the standards:        |
|                                                                              |
|    - RFC 2527_ – Internet X.509 Public Key Infrastructure                    |
+---------------+-------------------------------------+-------------+----------+

STD.20.2 PKI CA: RFC 2527 X.509 PKI Protocols FTP and HTTP
----------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.20.2      | PKI CA: RFC 2527 X.509 PKI          |    |std|    |  P2      |
+---------------+-------------------------------------+-------------+----------+
| CGL specifies that carrier grade Linux shall provide the functionality for   |
| private key infrastructure (PKI) support as defined in the standards:        |
|                                                                              |
|    - RFC 2585_ – Internet X.509 Public Key Infrastructure Operational        |
|      Protocols: FTP and HTTP                                                 |
+---------------+-------------------------------------+-------------+----------+

STD.20.3 PKI CA: RFC 3279 Algorithms for X.509 PKI
--------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.20.3      | PKI CA: RFC 3279 Algorithms for     |    |std|    |  P2      |
|               | X.509 PKI                           |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  for private key infrastructure (PKI) support as defined in the              |
|  standards:                                                                  |
|                                                                              |
|                                                                              |
|  RFC 3279 - Algorithms and Identifiers for the Internet X.509 Public Key     |
|  Infrastructure                                                              |
+---------------+-------------------------------------+-------------+----------+

STD.20.4 PKI CA: RFC 3280 X.509 PKI Certificate Stuff
-----------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| STD.20.4      | PKI CA: RFC 3280 X.509 PKI          |     |std|   |  P2      |
|               | Certificate Stuff                   |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide the functionality      |
|  for private key infrastructure (PKI) support as defined in the              |
|  standards:                                                                  |
|                                                                              |
|  RFC 3280 - Internet X.509 Public Key Infrastructure Certificate and         |
|  Certificate Revocation List (CRL) Profile                                   |
+---------------+-------------------------------------+-------------+----------+

STD.26.1 Layer 2 Tunneling Protocol Support
-------------------------------------------
+-----------+---------------------------------------+-------------+------------+
|    ID     |                 Name                  |  Category   |  Priority  |
+===========+=======================================+=============+============+
| STD.26.1  | Layer 2 Tunneling Protocol Support    |   |std|     | P1         |
+-----------+---------------------------------------+-------------+------------+
| Linux Foundation CGL specifies that carrier grade Linux shall                |
| provide support for Layer 2 Tunneling Protocol (L2TP) as described in RFC    |
| 2661: Layer Two Tunneling Protocol "L2TP".                                   |
|                                                                              |
| Reference: SCOPE Alliance Carrier Grade Gap CGOS-5.3                         |
|                                                                              |
| PoC: Mainline kernel.                                                        |
+-----------+---------------------------------------+-------------+------------+

STD.26.2 Layer 2 Tunneling Protocol Support Version 3
-----------------------------------------------------
+-----------+---------------------------------------+-------------+------------+
|    ID     |                 Name                  |  Category   |  Priority  |
+===========+=======================================+=============+============+
| STD.26.2  | Layer 2 Tunneling Protocol Support    |   |std|     | P1         |
|           | Version 3                             |             |            |
+-----------+---------------------------------------+-------------+------------+
| Linux Foundation CGL specifies that carrier grade Linux shall                |
| provide support for Layer 2 Tunneling Protocol (L2TP) as described in RFC    |
| 3931: Layer Two Tunneling Protocol - Version 3 (L2TPv3).                     |
|                                                                              |
| Reference: SCOPE Alliance Carrier Grade Gap CGOS-5.3                         |
|                                                                              |
| PoC: Mainline kernel.                                                        |
+-----------+---------------------------------------+-------------+------------+

Security Requirements
=====================
.. |sec| replace:: Security

SEC.1.1 Dynamic Kernel Security Module Mechanism
------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.1.1       | Dynamic Kernel Security Module      |    |sec|    |    P1    |
|               | Mechanism                           |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall support an interface that      |
|  allows the addition of new access control policy implementations to the     |
|  kernel without requiring patching or recompilation. This support must       |
|  allow for the dynamic loading of such policy implementations. The           |
|  mechanism must govern all of the kernel objects. This requirement does      |
|  not specify any particular policies.                                        |
+---------------+-------------------------------------+-------------+----------+

SEC.1.2 Process Containment using File System Restrictions
----------------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.1.2       | Process Containment using File      |    |sec|    |    P1    |
|               | System Restrictions                 |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for            |
|  constraining the privileges and access to system resources of a process     |
|  independently of the user account under which the process runs by           |
|  limiting a process' access to a subset of the file system hierarchy.        |
|  This limits the effects of a security compromise of a process (such as a    |
|  buffer overflow exploit).                                                   |
+---------------+-------------------------------------+-------------+----------+

SEC.1.3 Process Containment Using MAC-based Mechanism
-----------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.1.3       | Process Containment Using           |    |sec|    |    P1    |
|               | MAC-based Mechanism                 |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for            |
|  constraining the privileges and access to system resources of a process     |
|  independently of the user account under which the process runs, using a     |
|  mandatory access control (MAC) mechanism. This limits the effects of a      |
|  security compromise of a process, such as a buffer overflow exploit,        |
|  even if it running as root.                                                 |
+---------------+-------------------------------------+-------------+----------+

SEC.1.3.1 MAC-based Policy Administration Tools
-----------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.1.3.1     | MAC-based Policy                    |    |sec|    |    P2    |
|               | Administration Tools                |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide tools for the          |
|  administration of MAC-based access control policies. These tools should     |
|  facilitate the creation, maintenance, and management of policies. The       |
|  tools should provide at least one of a command line or graphical            |
|  interface.                                                                  |
+---------------+-------------------------------------+-------------+----------+

SEC.1.4 Buffer Overflow Protection
----------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.1.4       | Buffer Overflow Protection          |    |sec|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide at least one           |
|  mechanism to protect against the exploitation of software bugs that         |
|  exploit the lack of boundary checking in many programs and give an          |
|  attacker some access to a task's address space by writing outside of        |
|  buffer bounds.                                                              |
+---------------+-------------------------------------+-------------+----------+

SEC.1.5 Access Control List Support for File Systems
----------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.1.5       | Access Control List Support         |    |sec|    |    P1    |
|               | for File Systems                    |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide access control list    |
|  (ACL) capabilities on file systems that allow the specification of          |
|  access rights for multiple users and groups.                                |
+---------------+-------------------------------------+-------------+----------+

SEC.2.1 Generic Authentication Modules
--------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.2.1       | Generic Authentication Modules      |    |sec|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall support a mechanism for        |
|  implementing new operating system authentication mechanisms. This           |
|  support must allow for the dynamic loading of authentication modules.       |
+---------------+-------------------------------------+-------------+----------+

SEC.2.2 Password Integrity Checking
-----------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.2.2       | Password Integrity Checking         |    |sec|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide tools to check         |
|  passwords to ensure they cannot be cracked using common attack methods.     |
|  These tools shall support at least the DES cipher text format and allow     |
|  the user to specify rules for rejecting passwords.                          |
+---------------+-------------------------------------+-------------+----------+

SEC.3.1 Auditing
----------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.3.1       | Auditing                            |    |sec|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide auditing mechanisms    |
|  that flag security-relevant events and alert a system administrator.        |
+---------------+-------------------------------------+-------------+----------+

SEC.3.2 Secure Transport of Log Information
-------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.3.2       | Secure Transport of Log             |    |sec|    |    P1    |
|               | Information                         |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide secure transport of    |
|  log information over a network to the log files. The transport mechanism    |
|  shall ensure that the information remains confidential, cannot be           |
|  modified, is not a replay of an earlier log message, and originated at      |
|  the source it claims.                                                       |
+---------------+-------------------------------------+-------------+----------+

SEC.3.3 Periodic Automated Log Analysis
---------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.3.3       | Periodic Automated Log              |    |sec|    |    P1    |
|               | Analysis                            |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a mechanism for        |
|  periodically and automatically analyzing log files. This mechanism shall    |
|  be able to generate reports if any suspicious or unrecognized log entry     |
|  is detected.                                                                |
+---------------+-------------------------------------+-------------+----------+

SEC.3.4 Active Log Monitoring
-----------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.3.4       | Active Log Monitoring               |    |sec|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a mechanism for        |
|  automatically analyzing security-relevant log information. This             |
|  mechanism shall be able to generate alarms if criteria set by a system      |
|  administrator are met.                                                      |
+---------------+-------------------------------------+-------------+----------+

SEC.3.5 Log Integrity and Origin Authentication
-----------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.3.5       | Log Integrity and Origin            |    |sec|    |  P1      |
|               | Authentication                      |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a mechanism to         |
|  check that log files have not been modified (integrity), even by most       |
|  insiders. In addition, CGL specifies that carrier grade Linux shall         |
|  provide a mechanism to verify the origin of a log message. CGL              |
|  specifies that carrier grade Linux shall provide a mechanism to prevent     |
|  replay attacks of a log message.                                            |
+---------------+-------------------------------------+-------------+----------+

SEC.4.1 IPsec
-------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.4.1       | IPsec                               |    |sec|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide IPsec support for      |
|  network level confidentiality and integrity. The implementation shall       |
|  conform to RFC 2401_, 2402_, 2406_ and at least one encapsulating           |
|  security payload (ESP) algorithm such as specified by RFC 2451_.            |
+---------------+-------------------------------------+-------------+----------+

SEC.4.2 IKE
-----------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.4.2       | IKE                                 |    |sec|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide an Internet Key        |
|  Exchange (IKE) service to perform standards-based key exchange for          |
|  IPsec. The service shall conform to RFC 2409_.                              |
+---------------+-------------------------------------+-------------+----------+

SEC.4.3 PF_KEY Version 2
------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.4.3       | PF_KEY Version 2                    |    |sec|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide PF_KEY support, as     |
|  defined by RFC 2367_, for key management for the IPsec module and the       |
|  IKE service.                                                                |
+---------------+-------------------------------------+-------------+----------+

SEC.4.4 PKI Support for Applications
------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.4.4       | PKI Support for Applications        |    |sec|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide basic PKI features,    |
|  which shall conform to the IETF PKIX standards, specifically RFC 2527_,     |
|  3279_ and 3280_. Support for processing certification revocation lists      |
|  (CRLs) is required, although a specified delivery mechanism such            |
|  as HTTP/FTP RFC 2585_) is not specified.                                    |
+---------------+-------------------------------------+-------------+----------+

SEC.4.5 SSL/TLS Support for Applications
----------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.4.5       | SSL/TLS Support for                 |    |sec|    |    P1    |
|               | Applications                        |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide basic SSL/TLS          |
|  support, which shall conform to the legacy SSL and IETF TLS standards.      |
+---------------+-------------------------------------+-------------+----------+

SEC.4.6 PKI Certificate Authority (CA)
--------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.4.6       | PKI Certificate Authority (CA)      |    |sec|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a basic PKI CA         |
|  service.  This service shall conform to the IETF PKIX standards,            |
|  specifically RFC 2527_, RFC 3279_ and 3280_. Support for the management     |
|  of certification revocation lists (CRLs) is required. Certificate           |
|  management and request protocols as defined by RFC 2527_ 3279_, and         |
|  3280_, are not requirements.                                                |
+---------------+-------------------------------------+-------------+----------+

SEC.5.1 Periodic User-Level File Integrity Checking
---------------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.5.1       | Periodic User-Level File            |    |sec|    |    P1    |
|               | Integrity Checking                  |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a mechanism to         |
|  enable a periodic checking of the integrity of files at user-level.         |
|  Files to be checked are both binary files, which should not change after    |
|  installation, and text files, such as configuration and log files, which    |
|  may change. File integrity checks shall be able to be scheduled at any      |
|  time of the day. The checking mechanism shall be able to send alarms to     |
|  a system administrator when inconsistencies are detected.                   |
+---------------+-------------------------------------+-------------+----------+

SEC.7.1 Memory Limits
---------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.7.1       | Memory Limits                       |    |sec|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for            |
|  per-process limits for the use of system memory.                            |
+---------------+-------------------------------------+-------------+----------+

SEC.7.2 File System Quotas
--------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.7.2       | File System Quotas                  |    |sec|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for            |
|  per-user file system quotas.                                                |
+---------------+-------------------------------------+-------------+----------+

SEC.7.3 Process Quotas
----------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.7.3       | Process Quotas                      |    |sec|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide support for            |
|  per-user quotas on the number of processes which may be created.            |
+---------------+-------------------------------------+-------------+----------+

SEC.8 Trusted Platform Module (TPM) Support
-------------------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| SEC.8         | Trusted Platform Module (TPM)       |    |sec|    |    P2    |
|               | Support                             |             |          |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that, if and only if it is installed and executing on a       |
|  TPMenabled platform, carrier grade Linux shall provide OS support for       |
|  the TPM hardware, as defined in TCG TPM Specification, version 2.           |
+---------------+-------------------------------------+-------------+----------+

SEC.9.1 Role-Based Access Control
---------------------------------
+--------------+---------------------------------+--------------+--------------+
|      ID      |              Name               |   Category   |   Priority   |
+==============+=================================+==============+==============+
| SEC.9.1      | Role-Based Access Control       |  |sec|       | P1           |
+--------------+---------------------------------+--------------+--------------+
| Linux Foundation CGL specifies that carrier grade Linux shall                |
| provide a mechanism to associate a name with a set of privileges and         |
| commands to be executed, defining a role within the system.  It must be      |
| possible to assign a list of authorized users to a role, to remove users     |
| from a role and to log and audit actions performed within the role.  Each    |
| role must have a symbolic name and be able to be uniquely identified within  |
| the system.                                                                  |
|                                                                              |
| Reference: SCOPE Alliance Carrier Grade Gap CGOS-3.4                         |
|                                                                              |
| PoC: SELinux                                                                 |
+--------------+---------------------------------+--------------+--------------+

SEC.9.2 Advanced Role-Based Access Control
------------------------------------------
+--------------+---------------------------------+--------------+--------------+
|      ID      |              Name               |   Category   |   Priority   |
+==============+=================================+==============+==============+
| SEC.9.2      | Advanced Role-Based Access      |  |sec|       | P2           |
|              | Control                         |              |              |
+--------------+---------------------------------+--------------+--------------+
| Linux Foundation CGL specifies that carrier grade Linux shall                |
| implement the Common Criteria Role-Based Access Control protection           |
| profile, version 1.0.                                                        |
|                                                                              |
| Reference: SCOPE Alliance Carrier Grade Gap CGOS-3.4,                        |
| http://www.commoncriteriaportal.org/files/ppfiles/RBAC_987.pdf               |
|                                                                              |
| PoC:  SELinux                                                                |
+--------------+---------------------------------+--------------+--------------+

SEC.10 Tamper-Resistant Storage
-------------------------------
+--------------+-------------------------------+---------------+---------------+
|      ID      |             Name              |   Category    |   Priority    |
+==============+===============================+===============+===============+
| SEC.10       | Tamper-Resistant Storage      |  |sec|        | P2            |
+--------------+-------------------------------+---------------+---------------+
| Linux Foundation CGL specifies that carrier grade Linux shall                |
| provide secure, tamper-resistant storage for security-relevant data such as  |
| keys and certificates.  It must be possible for both kernel and user space   |
| to request validation of such data and to receive an assessment whether such |
| data has been modified either via the operating system or some external      |
| source.                                                                      |
|                                                                              |
| Reference: SCOPE Alliance Carrier Grade Gap CGOS-3.3                         |
+--------------+-------------------------------+---------------+---------------+

SEC.11.1 File Access Tracing
----------------------------
+--------------+----------------------------+-----------------+----------------+
|      ID      |            Name            |    Category     |    Priority    |
+==============+============================+=================+================+
| SEC.11.1     | File Access Tracing        |  |sec|          | P1             |
+--------------+----------------------------+-----------------+----------------+
| Linux Foundation CGL specifies that carrier grade Linux shall                |
| provide the ability to record and report, via the normal system event        |
| reporting mechanism, file access events.  At least the following file access |
| events must be recorded and reported:                                        |
|                                                                              |
|   * File open                                                                |
|   * File close                                                               |
|   * File read                                                                |
|   * File write                                                               |
|   * File deletion                                                            |
|   * File attribute changes                                                   |
|                                                                              |
| The reports must at least include the event that is being recorded and some  |
| uniquely identifiable information about the issuer of the operation.         |
|                                                                              |
| Reference: SCOPE Alliance Carrier Grade Gap CGOS_V3-2.0                      |
|                                                                              |
| PoC: Linux Audit Framework                                                   |
+--------------+----------------------------+-----------------+----------------+

SEC.11.2 File Access Tracing: Limiting
--------------------------------------
+-------------+-----------------------------------+-------------+--------------+
|     ID      |               Name                |  Category   |  Priority    |
+=============+===================================+=============+==============+
| SEC.11.2    | File Access Tracing: Limiting     |  |sec|      | P2           |
+-------------+-----------------------------------+-------------+--------------+
| Linux Foundation CGL specifies that carrier grade Linux shall                |
| provide the ability to record and report file access events.  It must be     |
| possible to include or exclude arbitrary files and/or directory hierarchies  |
| from the file access tracing and the types of events that shall be logged.   |
|                                                                              |
| Reference: SCOPE Alliance Carrier Grade Gap CGOS_V3-2.0                      |
|                                                                              |
| PoC:  AIDE, Samhain, GRSecurity                                              |
+-------------+-----------------------------------+-------------+--------------+

Hardware Requirements
=====================
.. |plt| replace:: Hardware

PMS.1.0 CPU Throttle
--------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| PMS.1.0       | CPU Throttle                        |    |plt|    |    P2    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall provide a CPU power            |
|  consumption management capability that enables adjustment of the CPU        |
|  frequency. Any power, voltage and frequency settings shall be within the    |
|  allowed range for the hardware.                                             |
+---------------+-------------------------------------+-------------+----------+

PMS.5.1 iSCSI Initiator Support
-------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| PMS.5.1       | iSCSI Initiator Support             |    |sec|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that carrier grade Linux shall support the iSCSI protocol     |
|  to enable block level access to SCSI storage devices using the TCP/IP       |
|  transport.  The support shall be compliant with the RFC 3270_               |
|  specification and should provide iSCSI initiator support. At a minimum      |
|  the supported iSCSI initiators should be able to authenticate themselves    |
|  to potential iSCSI targets using the two-way CHAP authentication            |
|  algorithm. See STD.17.0 iSCSI.                                              |
+---------------+-------------------------------------+-------------+----------+

PMS.5.3 iSCSI Target Discovery
------------------------------
+---------------+-------------------------------------+-------------+----------+
| ID            |       Name                          |   Category  | Priority |
+===============+=====================================+=============+==========+
| PMS.5.3       | iSCSI Target Discovery              |    |sec|    |    P1    |
+---------------+-------------------------------------+-------------+----------+
|  CGL specifies that the iSCSI Initiators implemented by carrier grade        |
|  Linux shall support the SendTargets Discovery mechanism to discover         |
|  potential iSCSI targets they can connect. See STD.17.0 iSCSI.               |
+---------------+-------------------------------------+-------------+----------+
